[{"categories":["建站"],"content":"内容来自FixIt：Markdown 基本语法 | FixIt。本文只介绍Markdown基础部分语法，基本所有的Markdown编辑器都支持，关于扩充的Markdown语法，因为有些编辑器不支持，所以先不赘述。为什么选择Markdown？ Markdown 是一种更好的生成 HTML 内容的方式，其主要的一些好处是： Markdown 简单易学，几乎没有多余的字符，因此编写内容也更快。 用 Markdown 书写时出错的机会更少。 可以产生有效的 XHTML 输出。 将内容和视觉显示保持分开，这样就不会打乱网站的外观。 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容。 Markdown 使用起来很有趣！ ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:0:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 注意h1就是文章的标题，所以从Markdown都是从h2开始。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:1:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:2:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"水平线 ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:3:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"段落 按照纯文本的方式书写段落，如下段落： Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样： \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:4:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"内联HTML元素 如果你需要某个 HTML 标签（带有一个类）, 则可以简单地像这样使用： Markdown 格式的段落。 \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:5:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"强调 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:6:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"加粗 用于强调带有较粗字体的文本片段。 **渲染为粗体** __渲染为粗体__ ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:6:1","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"斜体 *渲染为斜体* _渲染为斜体_ ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:6:2","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"删除线 ~~这段文本带有删除线。~~ ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:6:3","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"组合 ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗，斜体和删除线***~~ ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:6:4","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"引用 用于在文档中引用其他来源的内容块。在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 引用也可以嵌套： \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:7:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"列表 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:8:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"无序列表 一系列项的列表，其中项的顺序没有明显关系。可以使用以下任何符号来表示无序列表中的项： * 一项内容 - 一项内容 + 一项内容 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:8:1","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"有序列表 一系列项的列表，其中项的顺序确实很重要。 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 如果你对每一项使用 1., Markdown 将自动为每一项编号。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:8:2","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"任务列表 任务列表使你可以创建带有复选框的列表。 要创建任务列表，请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ])，要选择一个复选框，请在方括号之间添加 x ([x])。 - [x] Write the press release - [ ] Update the website - [ ] Contact the media ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:9:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"代码 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:10:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"行内代码 用 ` 包装行内代码段。 在这个例子中，`hello world` 会被包裹成 **代码**。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:10:1","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"缩进代码 将几行代码缩进至少四个空格。 // Some comments line 1 of code line 2 of code line 3 of code ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:10:2","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块。 ``` Sample text here... ``` ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:10:3","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"代码高亮 在代码 “围栏” 之后直接添加你要使用的语言的文件扩展名，如 ```js，语法高亮显示将自动应用于渲染的 HTML 中。 ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:10:4","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"表格 通过在每个单元格之间添加竖线作为分隔线，并在标题下添加一行破折号（也由竖线分隔）来创建表格。注意，竖线不需要垂直对齐。 | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 注意： 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐。 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中。 | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:11:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"链接 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:12:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:12:1","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:12:2","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"引用式链接 引用式链接是一种特殊的链接，它使 URL 在 Markdown 中更易于显示和阅读。 引用式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。 [text][id] //... [id]: http://example.org/ \"title\" 例如： [FixIt][fixit-repo] [fixit-repo]: https://github.com/hugo-fixit/FixIt \"A clean, elegant but advanced blog theme for Hugo\" ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:12:3","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点。 例如，每个章节： ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分： ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 定位标记的位置几乎是任意的。因为它们并不引人注目，所以它们通常被放在同一行了。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:13:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"脚注 脚注使你可以添加注释和参考，而不会使文档正文混乱。 当你创建脚注时，会在添加脚注引用的位置出现带有链接的上标编号。 读者可以单击链接以跳至页面底部的脚注内容。 要创建脚注引用，请在方括号中添加插入符号和标识符 ([^1])。 标识符可以是数字或单词，但不能包含空格或制表符。 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中，脚注按顺序编号。 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注)。 你不一定要在文档末尾添加脚注。可以将它们放在除列表，引用和表格等元素之外的任何位置。 这是一个数字脚注 [^1] 这是一个带标签的脚注 [^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:14:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"图片 图片的语法与链接相似，但包含一个在前面的感叹号。 ![Minion](https://octodex.github.com/images/minion.png) ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/:15:0","tags":["建站"],"title":"Markdown 语法","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/markdown-%E8%AF%AD%E6%B3%95/"},{"categories":["建站"],"content":"所有的格式需要参考：FixIt内容管理文档，这里只列出一些常用的格式，便于简单的日常写作。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:0:0","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数 不是所有的以下前置参数都必须在你的每篇文章中设置。 很多只有在文章的参数和你的主题配置中的 page 部分不一致时才有必要这么做。参数如下： title: 文章标题 subtitle: 文章副标题 date: 这篇文章创建的日期时间它通常是从文章的前置参数中的date字段获取的，但是也可以在主题配置中设置 lastmod: 上次修改内容的日期时间 draft: 如果设为true, 除非hugo命令使用了--buildDrafts/-D参数，这篇文章不会被渲染 author: 文章作者配置，和主题配置中的params.author部分相同 authorAvatar: 是否启用文章作者头像 description: 文章内容的描述 keywords: 文章内容的关键词 license: 这篇文章特殊的许可 images: 页面图片，用于Open Graph和Twitter Cards tags: 文章的标签 categories: 文章所属的类别 collections: 文章所属的合集 featuredImage: 文章的特色图片 featuredImagePreview: 用在主页预览的文章特色图片 hiddenFromHomePage: 如果设为true, 这篇文章将不会显示在主页上 hiddenFromSearch: 如果设为true, 这篇文章将不会显示在搜索结果中 hiddenFromRss: 如果设为true, 这篇文章将不会显示在RSS中 hiddenFromRelated: 如果设为true, 这篇文章将不会显示在相关文章中 twemoji: 如果设为true, 这篇文章会使用twemoji lightgallery: 和主题配置中的params.page.lightgallery部分相同 ruby: 如果设为true, 这篇文章会使用上标注释扩展语法 fraction: 如果设为true, 这篇文章会使用分数扩展语法 fontawesome: 如果设为true, 这篇文章会使用Font Awesome扩展语法 linkToMarkdown: 如果设为true, 内容的页脚将显示指向原始Markdown文件的链接 linkToSource: 如果设为true, 内容的页脚将显示指向源码的链接 linkToEdit: 如果设为true, 内容的页脚将显示指向编辑页面的链接 linkToReport: 如果设为true, 内容的页脚将显示指向报告问题的链接 rssFullText: 如果设为true, 在 RSS 中将会显示全文内容 pageStyle: 页面样式，详见 页面宽度 toc: 和主题配置中的params.page.toc部分相同 expirationReminder: 和主题配置中的params.page.expirationReminder部分相同 heading: 新增和主题配置中的params.page.heading部分相同 code: 和主题配置中的params.page.code部分相同 math: 和主题配置中的params.page.math部分相同 mapbox: 和主题配置中的params.page.mapbox部分相同 share: 和主题配置中的params.page.share部分相同 comment: 和主题配置中的params.page.comment部分相同 library: 和主题配置中的params.page.library部分相同 seo: 和主题配置中的params.page.seo部分相同 type: 页面渲染模板，详见页面模板 menu: 详见添加内容到菜单 password: 加密页面内容的密码，详见内容加密 message: 加密提示信息，详见内容加密 repost: 和主题配置中的params.page.repost部分相同 autoBookmark: 和主题配置中的params.page.autoBookmark部分相同 wordCount: 和主题配置中的params.page.wordCount部分相同 readingTime: 和主题配置中的params.page.readingTime部分相同 endFlag: 和主题配置中的params.page.endFlag部分相同 reward: 和主题配置中的params.page.reward部分相同 instantPage: 和主题配置中的params.page.instantPage部分相同 例如，一个常用的前置参数为： --- title: \"第一篇文章测试\" date: 2024-07-01T12:00:00+08:00 lastmod: 2024-07-01T12:00:00+08:00 draft: false tags: [\"标签1\", \"标签2\"] categories: [\"分类1\", \"分类2\"] collections: [\"合集1\", \"合集2\"] featuredImage: \"/image/xxx.png\" featuredImagePreview: \"/image/xxx.png\" author: name: \"\" # 文章作者 link: \"\" # 文章作者的链接 email: \"\" # 文章作者的邮箱，用于设置Gravatar头像，优先于avatar avatar: \"\" # 文章作者的头像 --- ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:1:0","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容摘要 FixIt使用内容摘要在主页中显示大致文章信息。默认情况下，Hugo自动将内容的前 70 个单词作为摘要。 你可以通过在网站配置中设置 summaryLength 来自定义摘要长度。 如果你要使用CJK中文/日语/韩语等语言创建内容，并且想使用 Hugo 的自动摘要拆分功能，请在网站配置中将 hasCJKLanguage 设置为 true。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:0","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"手动拆分摘要 可以添加 ` ` 摘要分割符来拆分文章生成摘要，摘要分隔符之前的内容将用作该文章的摘要。 注：小心输入 \u003c!--more--\u003e ，全部为小写且没有空格。 如果摘要不是文章开头的文字。可以在文章前置参数的 summary 变量中设置单独的摘要。 如果希望将文章前置参数中的 description 变量的内容作为摘要，仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符。但需要将摘要分隔符之前的内容保留为空。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:1","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容加密 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:0","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"全局加密 FixIt 主题提供了两个 front matter 用于全文加密。 password: [必需] 加密页面内容的密码 message: [可选] 加密提示信息 注意： 每次输入正确密码后，会在用户本地缓存密码 hash 值，一天之内再次访问时，将自动解锁文章。 文章最后提供有一个 “重新加密” 的按钮，点击即可立即忘记密码，并重新加密内容。 加密文章已从搜索中隐藏。 加密文章的 Markdown 输出已禁用。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:1","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"部分加密 你可以使用 fixit-encryptor shortcode 来加密部分内容。加密层级支持无限级嵌套。fixit-encryptor shortcode具有以下命名参数： password=\"\" [必选]（第一个位置参数）部分加密内容的密码。 message=\"\" [可选]（第二个位置参数）解密输入框的提示信息。 实例1： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e 实例2： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:2","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"shortcodes Hugo提供了多个内置的Shortcodes, 以方便作者保持Markdown内容的整洁。虽然可以使用HTML，但是正是因为它即使不经过渲染也可以轻松阅读。应该尽可能避免使用 HTML以保持内容简洁。 为了避免这种限制，Hugo创建了shortcodes。 shortcode是一个简单代码段，可以生成合理的 HTML 代码，并且符合 Markdown 的设计哲学。 Hugo 内置了一些预定义的 shortcodes，这里列出几个常用的： ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:0","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"highlight （显示代码） \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e 显示效果： \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:1","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"youtube（嵌入视频） 除此之外，FixIt扩展了一些shortcodes。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:2","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"****link（链接功能） link是 Markdown 链接语法的替代。link 可以提供一些其它的功能并且可以在代码块中使用。支持 本地资源引用 的完整用法。 其参数如下： href [必需]（第一个位置参数）链接的目标。 content [可选]（第二个位置参数）链接的内容，默认值是 href 参数的值。支持 Markdown 或者 HTML 格式。 title [可选]（第三个位置参数）HTML a 标签 的 title 属性，当悬停在链接上会显示的提示。 card [可选]（第四个位置参数）是否显示为卡片式链接，默认值false。 card-icon [可选]（第五个位置参数） 卡片式链接的图标，支持图片链接和 Font Awesome 图标。设置为true，自动从链接获取缩略图。 download [可选] HTMLa标签 的download属性。 class [可选] HTML a 标签 的 class 属性。 rel [可选] HTML a 标签 的 rel 补充属性。 external-icon [可选] 是否自动显示外链图标。 noreferrer [可选] rel 属性是否添加 noreferrer, 默认：true。 实例1：一个简单的超链接。 Assemble 实例4：可下载的卡片链接效果。 Wavelength.mp3 Wavelength.mp3 /music/Wavelength.mp3 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:3","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"image（图片） image用来插入图片，可以充分利用 lightgallery，支持 本地资源引用 的完整用法。 其参数如下： src [必需]（第一个位置参数）图片的 URL。 alt [可选]（第二个位置参数）图片无法显示时的替代文本，默认值是 src 参数的值。支持 Markdown 或者 HTML 格式。 caption [可选]（第三个位置参数）图片标题。支持 Markdown 或者 HTML 格式。 title [可选] 当悬停在图片上会显示的提示。 class [可选] HTML figure 标签的 class 属性。 src_s [可选] 图片缩略图的 URL, 用在画廊模式中，默认值是 src 参数的值。 src_l [可选] 高清图片的 URL, 用在画廊模式中，默认值是 src 参数的值。 height [可选] 图片的 height 属性。 width [可选] 图片的 width 属性。 linked [可选] 图片是否需要被链接，默认值是 true。 rel [可选] HTML a 标签 的 rel 补充属性，仅在 linked 属性设置成 true 时有效。 loading [可选] HTML a 标签 的 loading 补充属性，可选值：eager、lazy，默认值是 lazy。 示例1：显示一张图片。 Lighthouse ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:4","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"admonition（提示横幅） 支持12种帮助你在页面中插入提示的横幅，支持 Markdown 或者 HTML 格式。 分别如下： admonition 注意 abstract {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition \u0026gt;}} 一个 **摘要** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition info \u0026gt;}} 一个 **信息** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition tip \u0026gt;}} 一个 **技巧** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition success \u0026gt;}} 一个 **成功** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition question \u0026gt;}} 一个 **问题** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition warning \u0026gt;}} 一个 **警告** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition failure \u0026gt;}} 一个 **失败** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition danger \u0026gt;}} 一个 **危险** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition bug \u0026gt;}} 一个 **Bug** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition example \u0026gt;}} 一个 **示例** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition quote \u0026gt;}} 一个 **引用** 横幅 {{\u0026lt; /admonition \u0026gt;}} 上面的相当于是自带的横幅，我们也可以自己定义横幅。 其参数如下： type [必需]（第一个位置参数）admonition 横幅的类型，默认值是 note。 title [可选]（第二个位置参数）admonition 横幅的标题，默认值是 type 参数的值。（支持 markdown）。 open [可选]（第三个位置参数）横幅内容是否默认展开，默认值是 true。 示例1：一个简单的自定义横幅。 This is a tip 一个 技巧 横幅 This is a tip 一个 技巧 横幅 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:5","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"music（插入音乐） music提供了一个内嵌的响应式音乐播放器。 自定义音乐URL 支持本地资源引用的完整用法。 其参数如下： server [必需] 音乐的链接。 type [可选] 音乐的名称。 artist [可选] 音乐的创作者。 cover [可选] 音乐的封面链接。 示例1：使用自定义音乐的URL。 音乐平台URL自动识别 有一个命名参数来使用音乐平台 URL 的自动识别： auto [必需]（第一个位置参数）用来自动识别的音乐平台 URL，支持 netease，tencent 和 xiami 平台。 示例1：一个使用音乐平台 URL 的自动识别。 自定义音乐平台、类型和ID 有以下命名参数来使用自定义音乐平台： server [必需]（第一个位置参数）音乐平台 [netease, tencent, kugou, xiami, baidu]。 type [必需]（第二个位置参数）音乐类型 [song, playlist, album, search, artist]。 id [必需]（第三个位置参数）歌曲 ID，或者播放列表 ID，或者专辑 ID，或者搜索关键词，或者创作者 ID。 示例1：使用自定义音乐平台。 其他参数 有一些可以应用于以上三种方式的其它命名参数： theme [可选] 音乐播放器的主题色，默认值是 #448aff。 fixed [可选] 是否开启固定模式，默认值是 false。 mini [可选] 是否开启迷你模式，默认值是 false。 autoplay [可选] 是否自动播放音乐，默认值是 false。 volume [可选] 第一次打开播放器时的默认音量，会被保存在浏览器缓存中，默认值是 0.7。 mutex [可选] 是否自动暂停其它播放器，默认值是 true。 还有一些只适用于音乐列表方式的其它命名参数： loop [可选] [all, one, none] 音乐列表的循环模式，默认值是 none。 order [可选] [list, random] 音乐列表的播放顺序，默认值是 list。 list-folded [可选] 初次打开的时候音乐列表是否折叠，默认值是 false。 list-max-height [可选] 音乐列表的最大高度，默认值是 340px。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:6","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"bilibili（嵌入视频） 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器。 如果视频只有一个部分，则仅需要视频的 BV id。 示例1：一个bilibili视频链接。 https://www.bilibili.com/video/BV1Sx411T7QQ 如果视频包含多个部分，则除了视频的 BV id 之外，还需要 p，默认值为 1。 例如：一个带有p参数的视频链接。 https://www.bilibili.com/video/BV1TJ411C7An?p=3 详细参数 有以下命名参数： id [必需]（第一个位置参数）视频的 BV id。 p [可选]（第二个位置参数）多 P 视频的集数。从 1 开始计数，默认值为 1。 autoplay [可选] 是否自动播放，默认值为 false。 poster [可选] 是否展示封面，默认值为 true。 muted [可选] 是否静音，默认值为 false。 danmaku [可选] 是否开启弹幕，默认值为 true。 t [可选] 跳转到媒体的初始时间点，默认值为 0，单位：秒。 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:7","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"douyin（嵌入视频） 提供了一个内嵌的用来播放抖音视频的响应式播放器 视频 VideoID 可以通过 PC 端视频播放地址中获取。 示例1：播放抖音视频。 https://www.douyin.com/video/7370344193077644584 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:8","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"typeit（打字动画） typeit有以下命名参数： tag [可选]，内容容器的 HTML 标签。 code [可选]，指定代码内容语言类型，可以实习语法高亮。 code-link [可选]，是否解析代码内容中的 Markdown 链接，默认：false。 group [可选]，内容分组，相同分组的内容将按顺序开始打字动画。 loop [可选]，内容是否会在打字动画完成后继续循环。 注意：内容允许使用 Markdown 格式的简单内容，并且不包含富文本的块内容，例如图像等。 实例1：打印简单的带超链接的内容。 这一个带有基于 TypeIt 的打字动画的段落！ 实例2：打印代码内容 public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } 注意：默认情况下，所有打字动画都是同时开始的。 但有时可能需要按顺序开始一组 typeit 内容的打字动画。一组具有相同 group 参数值的 typeit 内容将按顺序开始打字动画。 实例3：带有分组的顺序打字动画 首先, 这个段落开始 接着, 这个段落开始 注意：默认情况下，打字动画完成后将停止。若需要内容在打字动画完成后继续循环，可以使用 loop 参数。 实例4：循环打字动画 这个段落将会循环 ","date":"2024-07-03","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:9","tags":["建站"],"title":"Hugo文章格式","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"所有的格式需要参考：FixIt内容管理文档，这里只列出一些常用的格式，便于简单的日常写作。 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:0:0","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数 不是所有的以下前置参数都必须在你的每篇文章中设置。 很多只有在文章的参数和你的主题配置中的 page 部分不一致时才有必要这么做。参数如下： title: 文章标题 subtitle: 文章副标题 date: 这篇文章创建的日期时间它通常是从文章的前置参数中的date字段获取的，但是也可以在主题配置中设置 lastmod: 上次修改内容的日期时间 draft: 如果设为true, 除非hugo命令使用了--buildDrafts/-D参数，这篇文章不会被渲染 author: 文章作者配置，和主题配置中的params.author部分相同 authorAvatar: 是否启用文章作者头像 description: 文章内容的描述 keywords: 文章内容的关键词 license: 这篇文章特殊的许可 images: 页面图片，用于Open Graph和Twitter Cards tags: 文章的标签 categories: 文章所属的类别 collections: 文章所属的合集 featuredImage: 文章的特色图片 featuredImagePreview: 用在主页预览的文章特色图片 hiddenFromHomePage: 如果设为true, 这篇文章将不会显示在主页上 hiddenFromSearch: 如果设为true, 这篇文章将不会显示在搜索结果中 hiddenFromRss: 如果设为true, 这篇文章将不会显示在RSS中 hiddenFromRelated: 如果设为true, 这篇文章将不会显示在相关文章中 twemoji: 如果设为true, 这篇文章会使用twemoji lightgallery: 和主题配置中的params.page.lightgallery部分相同 ruby: 如果设为true, 这篇文章会使用上标注释扩展语法 fraction: 如果设为true, 这篇文章会使用分数扩展语法 fontawesome: 如果设为true, 这篇文章会使用Font Awesome扩展语法 linkToMarkdown: 如果设为true, 内容的页脚将显示指向原始Markdown文件的链接 linkToSource: 如果设为true, 内容的页脚将显示指向源码的链接 linkToEdit: 如果设为true, 内容的页脚将显示指向编辑页面的链接 linkToReport: 如果设为true, 内容的页脚将显示指向报告问题的链接 rssFullText: 如果设为true, 在 RSS 中将会显示全文内容 pageStyle: 页面样式，详见 页面宽度 toc: 和主题配置中的params.page.toc部分相同 expirationReminder: 和主题配置中的params.page.expirationReminder部分相同 heading: 新增和主题配置中的params.page.heading部分相同 code: 和主题配置中的params.page.code部分相同 math: 和主题配置中的params.page.math部分相同 mapbox: 和主题配置中的params.page.mapbox部分相同 share: 和主题配置中的params.page.share部分相同 comment: 和主题配置中的params.page.comment部分相同 library: 和主题配置中的params.page.library部分相同 seo: 和主题配置中的params.page.seo部分相同 type: 页面渲染模板，详见页面模板 menu: 详见添加内容到菜单 password: 加密页面内容的密码，详见内容加密 message: 加密提示信息，详见内容加密 repost: 和主题配置中的params.page.repost部分相同 autoBookmark: 和主题配置中的params.page.autoBookmark部分相同 wordCount: 和主题配置中的params.page.wordCount部分相同 readingTime: 和主题配置中的params.page.readingTime部分相同 endFlag: 和主题配置中的params.page.endFlag部分相同 reward: 和主题配置中的params.page.reward部分相同 instantPage: 和主题配置中的params.page.instantPage部分相同 例如，一个常用的前置参数为： --- title: \"第一篇文章测试\" date: 2024-07-01T12:00:00+08:00 lastmod: 2024-07-01T12:00:00+08:00 draft: false tags: [\"标签1\", \"标签2\"] categories: [\"分类1\", \"分类2\"] collections: [\"合集1\", \"合集2\"] featuredImage: \"/image/xxx.png\" featuredImagePreview: \"/image/xxx.png\" author: name: \"\" # 文章作者 link: \"\" # 文章作者的链接 email: \"\" # 文章作者的邮箱，用于设置Gravatar头像，优先于avatar avatar: \"\" # 文章作者的头像 --- ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:1:0","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容摘要 FixIt使用内容摘要在主页中显示大致文章信息。默认情况下，Hugo自动将内容的前 70 个单词作为摘要。 你可以通过在网站配置中设置 summaryLength 来自定义摘要长度。 如果你要使用CJK中文/日语/韩语等语言创建内容，并且想使用 Hugo 的自动摘要拆分功能，请在网站配置中将 hasCJKLanguage 设置为 true。 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:0","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"手动拆分摘要 可以添加 ` ` 摘要分割符来拆分文章生成摘要，摘要分隔符之前的内容将用作该文章的摘要。 注：小心输入 \u003c!--more--\u003e ，全部为小写且没有空格。 如果摘要不是文章开头的文字。可以在文章前置参数的 summary 变量中设置单独的摘要。 如果希望将文章前置参数中的 description 变量的内容作为摘要，仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符。但需要将摘要分隔符之前的内容保留为空。 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:1","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容加密 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:0","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"全局加密 FixIt 主题提供了两个 front matter 用于全文加密。 password: [必需] 加密页面内容的密码 message: [可选] 加密提示信息 注意： 每次输入正确密码后，会在用户本地缓存密码 hash 值，一天之内再次访问时，将自动解锁文章。 文章最后提供有一个 “重新加密” 的按钮，点击即可立即忘记密码，并重新加密内容。 加密文章已从搜索中隐藏。 加密文章的 Markdown 输出已禁用。 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:1","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"部分加密 你可以使用 fixit-encryptor shortcode 来加密部分内容。加密层级支持无限级嵌套。fixit-encryptor shortcode具有以下命名参数： password=\"\" [必选]（第一个位置参数）部分加密内容的密码。 message=\"\" [可选]（第二个位置参数）解密输入框的提示信息。 实例1： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e 实例2： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:2","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"shortcodes Hugo提供了多个内置的Shortcodes, 以方便作者保持Markdown内容的整洁。虽然可以使用HTML，但是正是因为它即使不经过渲染也可以轻松阅读。应该尽可能避免使用 HTML以保持内容简洁。 为了避免这种限制，Hugo创建了shortcodes。 shortcode是一个简单代码段，可以生成合理的 HTML 代码，并且符合 Markdown 的设计哲学。 Hugo 内置了一些预定义的 shortcodes，这里列出几个常用的： ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:0","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"highlight （显示代码） \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e 显示效果： \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:1","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"youtube（嵌入视频） 除此之外，FixIt扩展了一些shortcodes。 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:2","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"****link（链接功能） link是 Markdown 链接语法的替代。link 可以提供一些其它的功能并且可以在代码块中使用。支持 本地资源引用 的完整用法。 其参数如下： href [必需]（第一个位置参数）链接的目标。 content [可选]（第二个位置参数）链接的内容，默认值是 href 参数的值。支持 Markdown 或者 HTML 格式。 title [可选]（第三个位置参数）HTML a 标签 的 title 属性，当悬停在链接上会显示的提示。 card [可选]（第四个位置参数）是否显示为卡片式链接，默认值false。 card-icon [可选]（第五个位置参数） 卡片式链接的图标，支持图片链接和 Font Awesome 图标。设置为true，自动从链接获取缩略图。 download [可选] HTMLa标签 的download属性。 class [可选] HTML a 标签 的 class 属性。 rel [可选] HTML a 标签 的 rel 补充属性。 external-icon [可选] 是否自动显示外链图标。 noreferrer [可选] rel 属性是否添加 noreferrer, 默认：true。 实例1：一个简单的超链接。 Assemble 实例4：可下载的卡片链接效果。 Wavelength.mp3 Wavelength.mp3 /music/Wavelength.mp3 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:3","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"image（图片） image用来插入图片，可以充分利用 lightgallery，支持 本地资源引用 的完整用法。 其参数如下： src [必需]（第一个位置参数）图片的 URL。 alt [可选]（第二个位置参数）图片无法显示时的替代文本，默认值是 src 参数的值。支持 Markdown 或者 HTML 格式。 caption [可选]（第三个位置参数）图片标题。支持 Markdown 或者 HTML 格式。 title [可选] 当悬停在图片上会显示的提示。 class [可选] HTML figure 标签的 class 属性。 src_s [可选] 图片缩略图的 URL, 用在画廊模式中，默认值是 src 参数的值。 src_l [可选] 高清图片的 URL, 用在画廊模式中，默认值是 src 参数的值。 height [可选] 图片的 height 属性。 width [可选] 图片的 width 属性。 linked [可选] 图片是否需要被链接，默认值是 true。 rel [可选] HTML a 标签 的 rel 补充属性，仅在 linked 属性设置成 true 时有效。 loading [可选] HTML a 标签 的 loading 补充属性，可选值：eager、lazy，默认值是 lazy。 示例1：显示一张图片。 Lighthouse ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:4","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"admonition（提示横幅） 支持12种帮助你在页面中插入提示的横幅，支持 Markdown 或者 HTML 格式。 分别如下： admonition 注意 abstract {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition \u0026gt;}} 一个 **摘要** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition info \u0026gt;}} 一个 **信息** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition tip \u0026gt;}} 一个 **技巧** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition success \u0026gt;}} 一个 **成功** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition question \u0026gt;}} 一个 **问题** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition warning \u0026gt;}} 一个 **警告** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition failure \u0026gt;}} 一个 **失败** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition danger \u0026gt;}} 一个 **危险** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition bug \u0026gt;}} 一个 **Bug** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition example \u0026gt;}} 一个 **示例** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition quote \u0026gt;}} 一个 **引用** 横幅 {{\u0026lt; /admonition \u0026gt;}} 上面的相当于是自带的横幅，我们也可以自己定义横幅。 其参数如下： type [必需]（第一个位置参数）admonition 横幅的类型，默认值是 note。 title [可选]（第二个位置参数）admonition 横幅的标题，默认值是 type 参数的值。（支持 markdown）。 open [可选]（第三个位置参数）横幅内容是否默认展开，默认值是 true。 示例1：一个简单的自定义横幅。 This is a tip 一个 技巧 横幅 This is a tip 一个 技巧 横幅 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:5","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"music（插入音乐） music提供了一个内嵌的响应式音乐播放器。 自定义音乐URL 支持本地资源引用的完整用法。 其参数如下： server [必需] 音乐的链接。 type [可选] 音乐的名称。 artist [可选] 音乐的创作者。 cover [可选] 音乐的封面链接。 示例1：使用自定义音乐的URL。 音乐平台URL自动识别 有一个命名参数来使用音乐平台 URL 的自动识别： auto [必需]（第一个位置参数）用来自动识别的音乐平台 URL，支持 netease，tencent 和 xiami 平台。 示例1：一个使用音乐平台 URL 的自动识别。 自定义音乐平台、类型和ID 有以下命名参数来使用自定义音乐平台： server [必需]（第一个位置参数）音乐平台 [netease, tencent, kugou, xiami, baidu]。 type [必需]（第二个位置参数）音乐类型 [song, playlist, album, search, artist]。 id [必需]（第三个位置参数）歌曲 ID，或者播放列表 ID，或者专辑 ID，或者搜索关键词，或者创作者 ID。 示例1：使用自定义音乐平台。 其他参数 有一些可以应用于以上三种方式的其它命名参数： theme [可选] 音乐播放器的主题色，默认值是 #448aff。 fixed [可选] 是否开启固定模式，默认值是 false。 mini [可选] 是否开启迷你模式，默认值是 false。 autoplay [可选] 是否自动播放音乐，默认值是 false。 volume [可选] 第一次打开播放器时的默认音量，会被保存在浏览器缓存中，默认值是 0.7。 mutex [可选] 是否自动暂停其它播放器，默认值是 true。 还有一些只适用于音乐列表方式的其它命名参数： loop [可选] [all, one, none] 音乐列表的循环模式，默认值是 none。 order [可选] [list, random] 音乐列表的播放顺序，默认值是 list。 list-folded [可选] 初次打开的时候音乐列表是否折叠，默认值是 false。 list-max-height [可选] 音乐列表的最大高度，默认值是 340px。 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:6","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"bilibili（嵌入视频） 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器。 如果视频只有一个部分，则仅需要视频的 BV id。 示例1：一个bilibili视频链接。 https://www.bilibili.com/video/BV1Sx411T7QQ 如果视频包含多个部分，则除了视频的 BV id 之外，还需要 p，默认值为 1。 例如：一个带有p参数的视频链接。 https://www.bilibili.com/video/BV1TJ411C7An?p=3 详细参数 有以下命名参数： id [必需]（第一个位置参数）视频的 BV id。 p [可选]（第二个位置参数）多 P 视频的集数。从 1 开始计数，默认值为 1。 autoplay [可选] 是否自动播放，默认值为 false。 poster [可选] 是否展示封面，默认值为 true。 muted [可选] 是否静音，默认值为 false。 danmaku [可选] 是否开启弹幕，默认值为 true。 t [可选] 跳转到媒体的初始时间点，默认值为 0，单位：秒。 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:7","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"douyin（嵌入视频） 提供了一个内嵌的用来播放抖音视频的响应式播放器 视频 VideoID 可以通过 PC 端视频播放地址中获取。 示例1：播放抖音视频。 https://www.douyin.com/video/7370344193077644584 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:8","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"typeit（打字动画） typeit有以下命名参数： tag [可选]，内容容器的 HTML 标签。 code [可选]，指定代码内容语言类型，可以实习语法高亮。 code-link [可选]，是否解析代码内容中的 Markdown 链接，默认：false。 group [可选]，内容分组，相同分组的内容将按顺序开始打字动画。 loop [可选]，内容是否会在打字动画完成后继续循环。 注意：内容允许使用 Markdown 格式的简单内容，并且不包含富文本的块内容，例如图像等。 实例1：打印简单的带超链接的内容。 这一个带有基于 TypeIt 的打字动画的段落！ 实例2：打印代码内容 public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } 注意：默认情况下，所有打字动画都是同时开始的。 但有时可能需要按顺序开始一组 typeit 内容的打字动画。一组具有相同 group 参数值的 typeit 内容将按顺序开始打字动画。 实例3：带有分组的顺序打字动画 首先, 这个段落开始 接着, 这个段落开始 注意：默认情况下，打字动画完成后将停止。若需要内容在打字动画完成后继续循环，可以使用 loop 参数。 实例4：循环打字动画 这个段落将会循环 ","date":"2024-07-03","objectID":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:9","tags":["建站"],"title":"Hugo文章格式","uri":"/lifes/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"所有的格式需要参考：FixIt内容管理文档，这里只列出一些常用的格式，便于简单的日常写作。 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:0:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数 不是所有的以下前置参数都必须在你的每篇文章中设置。 很多只有在文章的参数和你的主题配置中的 page 部分不一致时才有必要这么做。参数如下： title: 文章标题 subtitle: 文章副标题 date: 这篇文章创建的日期时间它通常是从文章的前置参数中的date字段获取的，但是也可以在主题配置中设置 lastmod: 上次修改内容的日期时间 draft: 如果设为true, 除非hugo命令使用了--buildDrafts/-D参数，这篇文章不会被渲染 author: 文章作者配置，和主题配置中的params.author部分相同 authorAvatar: 是否启用文章作者头像 description: 文章内容的描述 keywords: 文章内容的关键词 license: 这篇文章特殊的许可 images: 页面图片，用于Open Graph和Twitter Cards tags: 文章的标签 categories: 文章所属的类别 collections: 文章所属的合集 featuredImage: 文章的特色图片 featuredImagePreview: 用在主页预览的文章特色图片 hiddenFromHomePage: 如果设为true, 这篇文章将不会显示在主页上 hiddenFromSearch: 如果设为true, 这篇文章将不会显示在搜索结果中 hiddenFromRss: 如果设为true, 这篇文章将不会显示在RSS中 hiddenFromRelated: 如果设为true, 这篇文章将不会显示在相关文章中 twemoji: 如果设为true, 这篇文章会使用twemoji lightgallery: 和主题配置中的params.page.lightgallery部分相同 ruby: 如果设为true, 这篇文章会使用上标注释扩展语法 fraction: 如果设为true, 这篇文章会使用分数扩展语法 fontawesome: 如果设为true, 这篇文章会使用Font Awesome扩展语法 linkToMarkdown: 如果设为true, 内容的页脚将显示指向原始Markdown文件的链接 linkToSource: 如果设为true, 内容的页脚将显示指向源码的链接 linkToEdit: 如果设为true, 内容的页脚将显示指向编辑页面的链接 linkToReport: 如果设为true, 内容的页脚将显示指向报告问题的链接 rssFullText: 如果设为true, 在 RSS 中将会显示全文内容 pageStyle: 页面样式，详见 页面宽度 toc: 和主题配置中的params.page.toc部分相同 expirationReminder: 和主题配置中的params.page.expirationReminder部分相同 heading: 新增和主题配置中的params.page.heading部分相同 code: 和主题配置中的params.page.code部分相同 math: 和主题配置中的params.page.math部分相同 mapbox: 和主题配置中的params.page.mapbox部分相同 share: 和主题配置中的params.page.share部分相同 comment: 和主题配置中的params.page.comment部分相同 library: 和主题配置中的params.page.library部分相同 seo: 和主题配置中的params.page.seo部分相同 type: 页面渲染模板，详见页面模板 menu: 详见添加内容到菜单 password: 加密页面内容的密码，详见内容加密 message: 加密提示信息，详见内容加密 repost: 和主题配置中的params.page.repost部分相同 autoBookmark: 和主题配置中的params.page.autoBookmark部分相同 wordCount: 和主题配置中的params.page.wordCount部分相同 readingTime: 和主题配置中的params.page.readingTime部分相同 endFlag: 和主题配置中的params.page.endFlag部分相同 reward: 和主题配置中的params.page.reward部分相同 instantPage: 和主题配置中的params.page.instantPage部分相同 例如，一个常用的前置参数为： --- title: \"第一篇文章测试\" date: 2024-07-01T12:00:00+08:00 lastmod: 2024-07-01T12:00:00+08:00 draft: false tags: [\"标签1\", \"标签2\"] categories: [\"分类1\", \"分类2\"] collections: [\"合集1\", \"合集2\"] featuredImage: \"/image/xxx.png\" featuredImagePreview: \"/image/xxx.png\" author: name: \"\" # 文章作者 link: \"\" # 文章作者的链接 email: \"\" # 文章作者的邮箱，用于设置Gravatar头像，优先于avatar avatar: \"\" # 文章作者的头像 --- ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:1:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容摘要 FixIt使用内容摘要在主页中显示大致文章信息。默认情况下，Hugo自动将内容的前 70 个单词作为摘要。 你可以通过在网站配置中设置 summaryLength 来自定义摘要长度。 如果你要使用CJK中文/日语/韩语等语言创建内容，并且想使用 Hugo 的自动摘要拆分功能，请在网站配置中将 hasCJKLanguage 设置为 true。 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"手动拆分摘要 可以添加 ` ` 摘要分割符来拆分文章生成摘要，摘要分隔符之前的内容将用作该文章的摘要。 注：小心输入 \u003c!--more--\u003e ，全部为小写且没有空格。 如果摘要不是文章开头的文字。可以在文章前置参数的 summary 变量中设置单独的摘要。 如果希望将文章前置参数中的 description 变量的内容作为摘要，仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符。但需要将摘要分隔符之前的内容保留为空。 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:1","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容加密 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"全局加密 FixIt 主题提供了两个 front matter 用于全文加密。 password: [必需] 加密页面内容的密码 message: [可选] 加密提示信息 注意： 每次输入正确密码后，会在用户本地缓存密码 hash 值，一天之内再次访问时，将自动解锁文章。 文章最后提供有一个 “重新加密” 的按钮，点击即可立即忘记密码，并重新加密内容。 加密文章已从搜索中隐藏。 加密文章的 Markdown 输出已禁用。 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:1","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"部分加密 你可以使用 fixit-encryptor shortcode 来加密部分内容。加密层级支持无限级嵌套。fixit-encryptor shortcode具有以下命名参数： password=\"\" [必选]（第一个位置参数）部分加密内容的密码。 message=\"\" [可选]（第二个位置参数）解密输入框的提示信息。 实例1： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e 实例2： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:2","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"shortcodes Hugo提供了多个内置的Shortcodes, 以方便作者保持Markdown内容的整洁。虽然可以使用HTML，但是正是因为它即使不经过渲染也可以轻松阅读。应该尽可能避免使用 HTML以保持内容简洁。 为了避免这种限制，Hugo创建了shortcodes。 shortcode是一个简单代码段，可以生成合理的 HTML 代码，并且符合 Markdown 的设计哲学。 Hugo 内置了一些预定义的 shortcodes，这里列出几个常用的： ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"highlight （显示代码） \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e 显示效果： \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:1","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"youtube（嵌入视频） 除此之外，FixIt扩展了一些shortcodes。 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:2","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"****link（链接功能） link是 Markdown 链接语法的替代。link 可以提供一些其它的功能并且可以在代码块中使用。支持 本地资源引用 的完整用法。 其参数如下： href [必需]（第一个位置参数）链接的目标。 content [可选]（第二个位置参数）链接的内容，默认值是 href 参数的值。支持 Markdown 或者 HTML 格式。 title [可选]（第三个位置参数）HTML a 标签 的 title 属性，当悬停在链接上会显示的提示。 card [可选]（第四个位置参数）是否显示为卡片式链接，默认值false。 card-icon [可选]（第五个位置参数） 卡片式链接的图标，支持图片链接和 Font Awesome 图标。设置为true，自动从链接获取缩略图。 download [可选] HTMLa标签 的download属性。 class [可选] HTML a 标签 的 class 属性。 rel [可选] HTML a 标签 的 rel 补充属性。 external-icon [可选] 是否自动显示外链图标。 noreferrer [可选] rel 属性是否添加 noreferrer, 默认：true。 实例1：一个简单的超链接。 Assemble 实例4：可下载的卡片链接效果。 Wavelength.mp3 Wavelength.mp3 /music/Wavelength.mp3 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:3","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"image（图片） image用来插入图片，可以充分利用 lightgallery，支持 本地资源引用 的完整用法。 其参数如下： src [必需]（第一个位置参数）图片的 URL。 alt [可选]（第二个位置参数）图片无法显示时的替代文本，默认值是 src 参数的值。支持 Markdown 或者 HTML 格式。 caption [可选]（第三个位置参数）图片标题。支持 Markdown 或者 HTML 格式。 title [可选] 当悬停在图片上会显示的提示。 class [可选] HTML figure 标签的 class 属性。 src_s [可选] 图片缩略图的 URL, 用在画廊模式中，默认值是 src 参数的值。 src_l [可选] 高清图片的 URL, 用在画廊模式中，默认值是 src 参数的值。 height [可选] 图片的 height 属性。 width [可选] 图片的 width 属性。 linked [可选] 图片是否需要被链接，默认值是 true。 rel [可选] HTML a 标签 的 rel 补充属性，仅在 linked 属性设置成 true 时有效。 loading [可选] HTML a 标签 的 loading 补充属性，可选值：eager、lazy，默认值是 lazy。 示例1：显示一张图片。 Lighthouse ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:4","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"admonition（提示横幅） 支持12种帮助你在页面中插入提示的横幅，支持 Markdown 或者 HTML 格式。 分别如下： admonition 注意 abstract {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition \u0026gt;}} 一个 **摘要** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition info \u0026gt;}} 一个 **信息** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition tip \u0026gt;}} 一个 **技巧** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition success \u0026gt;}} 一个 **成功** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition question \u0026gt;}} 一个 **问题** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition warning \u0026gt;}} 一个 **警告** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition failure \u0026gt;}} 一个 **失败** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition danger \u0026gt;}} 一个 **危险** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition bug \u0026gt;}} 一个 **Bug** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition example \u0026gt;}} 一个 **示例** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition quote \u0026gt;}} 一个 **引用** 横幅 {{\u0026lt; /admonition \u0026gt;}} 上面的相当于是自带的横幅，我们也可以自己定义横幅。 其参数如下： type [必需]（第一个位置参数）admonition 横幅的类型，默认值是 note。 title [可选]（第二个位置参数）admonition 横幅的标题，默认值是 type 参数的值。（支持 markdown）。 open [可选]（第三个位置参数）横幅内容是否默认展开，默认值是 true。 示例1：一个简单的自定义横幅。 This is a tip 一个 技巧 横幅 This is a tip 一个 技巧 横幅 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:5","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"music（插入音乐） music提供了一个内嵌的响应式音乐播放器。 自定义音乐URL 支持本地资源引用的完整用法。 其参数如下： server [必需] 音乐的链接。 type [可选] 音乐的名称。 artist [可选] 音乐的创作者。 cover [可选] 音乐的封面链接。 示例1：使用自定义音乐的URL。 音乐平台URL自动识别 有一个命名参数来使用音乐平台 URL 的自动识别： auto [必需]（第一个位置参数）用来自动识别的音乐平台 URL，支持 netease，tencent 和 xiami 平台。 示例1：一个使用音乐平台 URL 的自动识别。 自定义音乐平台、类型和ID 有以下命名参数来使用自定义音乐平台： server [必需]（第一个位置参数）音乐平台 [netease, tencent, kugou, xiami, baidu]。 type [必需]（第二个位置参数）音乐类型 [song, playlist, album, search, artist]。 id [必需]（第三个位置参数）歌曲 ID，或者播放列表 ID，或者专辑 ID，或者搜索关键词，或者创作者 ID。 示例1：使用自定义音乐平台。 其他参数 有一些可以应用于以上三种方式的其它命名参数： theme [可选] 音乐播放器的主题色，默认值是 #448aff。 fixed [可选] 是否开启固定模式，默认值是 false。 mini [可选] 是否开启迷你模式，默认值是 false。 autoplay [可选] 是否自动播放音乐，默认值是 false。 volume [可选] 第一次打开播放器时的默认音量，会被保存在浏览器缓存中，默认值是 0.7。 mutex [可选] 是否自动暂停其它播放器，默认值是 true。 还有一些只适用于音乐列表方式的其它命名参数： loop [可选] [all, one, none] 音乐列表的循环模式，默认值是 none。 order [可选] [list, random] 音乐列表的播放顺序，默认值是 list。 list-folded [可选] 初次打开的时候音乐列表是否折叠，默认值是 false。 list-max-height [可选] 音乐列表的最大高度，默认值是 340px。 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:6","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"bilibili（嵌入视频） 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器。 如果视频只有一个部分，则仅需要视频的 BV id。 示例1：一个bilibili视频链接。 https://www.bilibili.com/video/BV1Sx411T7QQ 如果视频包含多个部分，则除了视频的 BV id 之外，还需要 p，默认值为 1。 例如：一个带有p参数的视频链接。 https://www.bilibili.com/video/BV1TJ411C7An?p=3 详细参数 有以下命名参数： id [必需]（第一个位置参数）视频的 BV id。 p [可选]（第二个位置参数）多 P 视频的集数。从 1 开始计数，默认值为 1。 autoplay [可选] 是否自动播放，默认值为 false。 poster [可选] 是否展示封面，默认值为 true。 muted [可选] 是否静音，默认值为 false。 danmaku [可选] 是否开启弹幕，默认值为 true。 t [可选] 跳转到媒体的初始时间点，默认值为 0，单位：秒。 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:7","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"douyin（嵌入视频） 提供了一个内嵌的用来播放抖音视频的响应式播放器 视频 VideoID 可以通过 PC 端视频播放地址中获取。 示例1：播放抖音视频。 https://www.douyin.com/video/7370344193077644584 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:8","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"typeit（打字动画） typeit有以下命名参数： tag [可选]，内容容器的 HTML 标签。 code [可选]，指定代码内容语言类型，可以实习语法高亮。 code-link [可选]，是否解析代码内容中的 Markdown 链接，默认：false。 group [可选]，内容分组，相同分组的内容将按顺序开始打字动画。 loop [可选]，内容是否会在打字动画完成后继续循环。 注意：内容允许使用 Markdown 格式的简单内容，并且不包含富文本的块内容，例如图像等。 实例1：打印简单的带超链接的内容。 这一个带有基于 TypeIt 的打字动画的段落！ 实例2：打印代码内容 public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } 注意：默认情况下，所有打字动画都是同时开始的。 但有时可能需要按顺序开始一组 typeit 内容的打字动画。一组具有相同 group 参数值的 typeit 内容将按顺序开始打字动画。 实例3：带有分组的顺序打字动画 首先, 这个段落开始 接着, 这个段落开始 注意：默认情况下，打字动画完成后将停止。若需要内容在打字动画完成后继续循环，可以使用 loop 参数。 实例4：循环打字动画 这个段落将会循环 ","date":"2024-07-03","objectID":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:9","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/c++/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"所有的格式需要参考：FixIt内容管理文档，这里只列出一些常用的格式，便于简单的日常写作。 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:0:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数 不是所有的以下前置参数都必须在你的每篇文章中设置。 很多只有在文章的参数和你的主题配置中的 page 部分不一致时才有必要这么做。参数如下： title: 文章标题 subtitle: 文章副标题 date: 这篇文章创建的日期时间它通常是从文章的前置参数中的date字段获取的，但是也可以在主题配置中设置 lastmod: 上次修改内容的日期时间 draft: 如果设为true, 除非hugo命令使用了--buildDrafts/-D参数，这篇文章不会被渲染 author: 文章作者配置，和主题配置中的params.author部分相同 authorAvatar: 是否启用文章作者头像 description: 文章内容的描述 keywords: 文章内容的关键词 license: 这篇文章特殊的许可 images: 页面图片，用于Open Graph和Twitter Cards tags: 文章的标签 categories: 文章所属的类别 collections: 文章所属的合集 featuredImage: 文章的特色图片 featuredImagePreview: 用在主页预览的文章特色图片 hiddenFromHomePage: 如果设为true, 这篇文章将不会显示在主页上 hiddenFromSearch: 如果设为true, 这篇文章将不会显示在搜索结果中 hiddenFromRss: 如果设为true, 这篇文章将不会显示在RSS中 hiddenFromRelated: 如果设为true, 这篇文章将不会显示在相关文章中 twemoji: 如果设为true, 这篇文章会使用twemoji lightgallery: 和主题配置中的params.page.lightgallery部分相同 ruby: 如果设为true, 这篇文章会使用上标注释扩展语法 fraction: 如果设为true, 这篇文章会使用分数扩展语法 fontawesome: 如果设为true, 这篇文章会使用Font Awesome扩展语法 linkToMarkdown: 如果设为true, 内容的页脚将显示指向原始Markdown文件的链接 linkToSource: 如果设为true, 内容的页脚将显示指向源码的链接 linkToEdit: 如果设为true, 内容的页脚将显示指向编辑页面的链接 linkToReport: 如果设为true, 内容的页脚将显示指向报告问题的链接 rssFullText: 如果设为true, 在 RSS 中将会显示全文内容 pageStyle: 页面样式，详见 页面宽度 toc: 和主题配置中的params.page.toc部分相同 expirationReminder: 和主题配置中的params.page.expirationReminder部分相同 heading: 新增和主题配置中的params.page.heading部分相同 code: 和主题配置中的params.page.code部分相同 math: 和主题配置中的params.page.math部分相同 mapbox: 和主题配置中的params.page.mapbox部分相同 share: 和主题配置中的params.page.share部分相同 comment: 和主题配置中的params.page.comment部分相同 library: 和主题配置中的params.page.library部分相同 seo: 和主题配置中的params.page.seo部分相同 type: 页面渲染模板，详见页面模板 menu: 详见添加内容到菜单 password: 加密页面内容的密码，详见内容加密 message: 加密提示信息，详见内容加密 repost: 和主题配置中的params.page.repost部分相同 autoBookmark: 和主题配置中的params.page.autoBookmark部分相同 wordCount: 和主题配置中的params.page.wordCount部分相同 readingTime: 和主题配置中的params.page.readingTime部分相同 endFlag: 和主题配置中的params.page.endFlag部分相同 reward: 和主题配置中的params.page.reward部分相同 instantPage: 和主题配置中的params.page.instantPage部分相同 例如，一个常用的前置参数为： --- title: \"第一篇文章测试\" date: 2024-07-01T12:00:00+08:00 lastmod: 2024-07-01T12:00:00+08:00 draft: false tags: [\"标签1\", \"标签2\"] categories: [\"分类1\", \"分类2\"] collections: [\"合集1\", \"合集2\"] featuredImage: \"/image/xxx.png\" featuredImagePreview: \"/image/xxx.png\" author: name: \"\" # 文章作者 link: \"\" # 文章作者的链接 email: \"\" # 文章作者的邮箱，用于设置Gravatar头像，优先于avatar avatar: \"\" # 文章作者的头像 --- ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:1:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容摘要 FixIt使用内容摘要在主页中显示大致文章信息。默认情况下，Hugo自动将内容的前 70 个单词作为摘要。 你可以通过在网站配置中设置 summaryLength 来自定义摘要长度。 如果你要使用CJK中文/日语/韩语等语言创建内容，并且想使用 Hugo 的自动摘要拆分功能，请在网站配置中将 hasCJKLanguage 设置为 true。 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"手动拆分摘要 可以添加 ` ` 摘要分割符来拆分文章生成摘要，摘要分隔符之前的内容将用作该文章的摘要。 注：小心输入 \u003c!--more--\u003e ，全部为小写且没有空格。 如果摘要不是文章开头的文字。可以在文章前置参数的 summary 变量中设置单独的摘要。 如果希望将文章前置参数中的 description 变量的内容作为摘要，仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符。但需要将摘要分隔符之前的内容保留为空。 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:2:1","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"内容加密 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"全局加密 FixIt 主题提供了两个 front matter 用于全文加密。 password: [必需] 加密页面内容的密码 message: [可选] 加密提示信息 注意： 每次输入正确密码后，会在用户本地缓存密码 hash 值，一天之内再次访问时，将自动解锁文章。 文章最后提供有一个 “重新加密” 的按钮，点击即可立即忘记密码，并重新加密内容。 加密文章已从搜索中隐藏。 加密文章的 Markdown 输出已禁用。 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:1","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"部分加密 你可以使用 fixit-encryptor shortcode 来加密部分内容。加密层级支持无限级嵌套。fixit-encryptor shortcode具有以下命名参数： password=\"\" [必选]（第一个位置参数）部分加密内容的密码。 message=\"\" [可选]（第二个位置参数）解密输入框的提示信息。 实例1： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e 实例2： \u003cfixit-encryptor class=\"fixit-encryptor-shortcode\"\u003e \u003cdiv class=\"fixit-decryptor-container\"\u003e \u003clabel title='密码'\u003e \u003cinput type=\"password\" class=\"fixit-decryptor-input\" placeholder=\"🔑 密码是 1212\" /\u003e \u003c/label\u003e \u003cbutton class=\"fixit-decryptor-btn\"\u003e\u003ci class=\"fa-solid fa-unlock\" aria-hidden=\"true\"\u003e\u003c/i\u003e 进入\u003c/button\u003e \u003c/div\u003e \u003cdiv data-password=\"a01610228fe998f515a72dd730294d87\" data-content=\"6L\u0026#43;Z602f9ed2a8d1e08d8f74f5303e9eb93637d47f82ab6f1c15871cf8dd0481YeM5piv5Yqg5a\u0026#43;G55qE5YaF5a65JmhlbGxpcDs=\"\u003e\u003c/div\u003e \u003c/fixit-encryptor\u003e ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:3:2","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"shortcodes Hugo提供了多个内置的Shortcodes, 以方便作者保持Markdown内容的整洁。虽然可以使用HTML，但是正是因为它即使不经过渲染也可以轻松阅读。应该尽可能避免使用 HTML以保持内容简洁。 为了避免这种限制，Hugo创建了shortcodes。 shortcode是一个简单代码段，可以生成合理的 HTML 代码，并且符合 Markdown 的设计哲学。 Hugo 内置了一些预定义的 shortcodes，这里列出几个常用的： ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:0","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"highlight （显示代码） \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e 显示效果： \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:1","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"youtube（嵌入视频） 除此之外，FixIt扩展了一些shortcodes。 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:2","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"****link（链接功能） link是 Markdown 链接语法的替代。link 可以提供一些其它的功能并且可以在代码块中使用。支持 本地资源引用 的完整用法。 其参数如下： href [必需]（第一个位置参数）链接的目标。 content [可选]（第二个位置参数）链接的内容，默认值是 href 参数的值。支持 Markdown 或者 HTML 格式。 title [可选]（第三个位置参数）HTML a 标签 的 title 属性，当悬停在链接上会显示的提示。 card [可选]（第四个位置参数）是否显示为卡片式链接，默认值false。 card-icon [可选]（第五个位置参数） 卡片式链接的图标，支持图片链接和 Font Awesome 图标。设置为true，自动从链接获取缩略图。 download [可选] HTMLa标签 的download属性。 class [可选] HTML a 标签 的 class 属性。 rel [可选] HTML a 标签 的 rel 补充属性。 external-icon [可选] 是否自动显示外链图标。 noreferrer [可选] rel 属性是否添加 noreferrer, 默认：true。 实例1：一个简单的超链接。 Assemble 实例4：可下载的卡片链接效果。 Wavelength.mp3 Wavelength.mp3 /music/Wavelength.mp3 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:3","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"image（图片） image用来插入图片，可以充分利用 lightgallery，支持 本地资源引用 的完整用法。 其参数如下： src [必需]（第一个位置参数）图片的 URL。 alt [可选]（第二个位置参数）图片无法显示时的替代文本，默认值是 src 参数的值。支持 Markdown 或者 HTML 格式。 caption [可选]（第三个位置参数）图片标题。支持 Markdown 或者 HTML 格式。 title [可选] 当悬停在图片上会显示的提示。 class [可选] HTML figure 标签的 class 属性。 src_s [可选] 图片缩略图的 URL, 用在画廊模式中，默认值是 src 参数的值。 src_l [可选] 高清图片的 URL, 用在画廊模式中，默认值是 src 参数的值。 height [可选] 图片的 height 属性。 width [可选] 图片的 width 属性。 linked [可选] 图片是否需要被链接，默认值是 true。 rel [可选] HTML a 标签 的 rel 补充属性，仅在 linked 属性设置成 true 时有效。 loading [可选] HTML a 标签 的 loading 补充属性，可选值：eager、lazy，默认值是 lazy。 示例1：显示一张图片。 Lighthouse ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:4","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"admonition（提示横幅） 支持12种帮助你在页面中插入提示的横幅，支持 Markdown 或者 HTML 格式。 分别如下： admonition 注意 abstract {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition \u0026gt;}} 一个 **摘要** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition info \u0026gt;}} 一个 **信息** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition tip \u0026gt;}} 一个 **技巧** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition success \u0026gt;}} 一个 **成功** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition question \u0026gt;}} 一个 **问题** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition warning \u0026gt;}} 一个 **警告** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition failure \u0026gt;}} 一个 **失败** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition danger \u0026gt;}} 一个 **危险** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition bug \u0026gt;}} 一个 **Bug** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition example \u0026gt;}} 一个 **示例** 横幅 {{\u0026lt; /admonition \u0026gt;}} {{\u0026lt; admonition quote \u0026gt;}} 一个 **引用** 横幅 {{\u0026lt; /admonition \u0026gt;}} 上面的相当于是自带的横幅，我们也可以自己定义横幅。 其参数如下： type [必需]（第一个位置参数）admonition 横幅的类型，默认值是 note。 title [可选]（第二个位置参数）admonition 横幅的标题，默认值是 type 参数的值。（支持 markdown）。 open [可选]（第三个位置参数）横幅内容是否默认展开，默认值是 true。 示例1：一个简单的自定义横幅。 This is a tip 一个 技巧 横幅 This is a tip 一个 技巧 横幅 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:5","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"music（插入音乐） music提供了一个内嵌的响应式音乐播放器。 自定义音乐URL 支持本地资源引用的完整用法。 其参数如下： server [必需] 音乐的链接。 type [可选] 音乐的名称。 artist [可选] 音乐的创作者。 cover [可选] 音乐的封面链接。 示例1：使用自定义音乐的URL。 音乐平台URL自动识别 有一个命名参数来使用音乐平台 URL 的自动识别： auto [必需]（第一个位置参数）用来自动识别的音乐平台 URL，支持 netease，tencent 和 xiami 平台。 示例1：一个使用音乐平台 URL 的自动识别。 自定义音乐平台、类型和ID 有以下命名参数来使用自定义音乐平台： server [必需]（第一个位置参数）音乐平台 [netease, tencent, kugou, xiami, baidu]。 type [必需]（第二个位置参数）音乐类型 [song, playlist, album, search, artist]。 id [必需]（第三个位置参数）歌曲 ID，或者播放列表 ID，或者专辑 ID，或者搜索关键词，或者创作者 ID。 示例1：使用自定义音乐平台。 其他参数 有一些可以应用于以上三种方式的其它命名参数： theme [可选] 音乐播放器的主题色，默认值是 #448aff。 fixed [可选] 是否开启固定模式，默认值是 false。 mini [可选] 是否开启迷你模式，默认值是 false。 autoplay [可选] 是否自动播放音乐，默认值是 false。 volume [可选] 第一次打开播放器时的默认音量，会被保存在浏览器缓存中，默认值是 0.7。 mutex [可选] 是否自动暂停其它播放器，默认值是 true。 还有一些只适用于音乐列表方式的其它命名参数： loop [可选] [all, one, none] 音乐列表的循环模式，默认值是 none。 order [可选] [list, random] 音乐列表的播放顺序，默认值是 list。 list-folded [可选] 初次打开的时候音乐列表是否折叠，默认值是 false。 list-max-height [可选] 音乐列表的最大高度，默认值是 340px。 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:6","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"bilibili（嵌入视频） 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器。 如果视频只有一个部分，则仅需要视频的 BV id。 示例1：一个bilibili视频链接。 https://www.bilibili.com/video/BV1Sx411T7QQ 如果视频包含多个部分，则除了视频的 BV id 之外，还需要 p，默认值为 1。 例如：一个带有p参数的视频链接。 https://www.bilibili.com/video/BV1TJ411C7An?p=3 详细参数 有以下命名参数： id [必需]（第一个位置参数）视频的 BV id。 p [可选]（第二个位置参数）多 P 视频的集数。从 1 开始计数，默认值为 1。 autoplay [可选] 是否自动播放，默认值为 false。 poster [可选] 是否展示封面，默认值为 true。 muted [可选] 是否静音，默认值为 false。 danmaku [可选] 是否开启弹幕，默认值为 true。 t [可选] 跳转到媒体的初始时间点，默认值为 0，单位：秒。 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:7","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"douyin（嵌入视频） 提供了一个内嵌的用来播放抖音视频的响应式播放器 视频 VideoID 可以通过 PC 端视频播放地址中获取。 示例1：播放抖音视频。 https://www.douyin.com/video/7370344193077644584 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:8","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"typeit（打字动画） typeit有以下命名参数： tag [可选]，内容容器的 HTML 标签。 code [可选]，指定代码内容语言类型，可以实习语法高亮。 code-link [可选]，是否解析代码内容中的 Markdown 链接，默认：false。 group [可选]，内容分组，相同分组的内容将按顺序开始打字动画。 loop [可选]，内容是否会在打字动画完成后继续循环。 注意：内容允许使用 Markdown 格式的简单内容，并且不包含富文本的块内容，例如图像等。 实例1：打印简单的带超链接的内容。 这一个带有基于 TypeIt 的打字动画的段落！ 实例2：打印代码内容 public class HelloWorld { public static void main(String []args) { System.out.println(\"Hello World\"); } } 注意：默认情况下，所有打字动画都是同时开始的。 但有时可能需要按顺序开始一组 typeit 内容的打字动画。一组具有相同 group 参数值的 typeit 内容将按顺序开始打字动画。 实例3：带有分组的顺序打字动画 首先, 这个段落开始 接着, 这个段落开始 注意：默认情况下，打字动画完成后将停止。若需要内容在打字动画完成后继续循环，可以使用 loop 参数。 实例4：循环打字动画 这个段落将会循环 ","date":"2024-07-03","objectID":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/:4:9","tags":["建站"],"title":"Hugo文章格式1","uri":"/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/hugo%E6%96%87%E7%AB%A0%E6%A0%BC%E5%BC%8F/"},{"categories":["建站"],"content":"写在前面，因为每个人审美不同，我们完全可以对主题的细节进行修改，但是，不建议直接在主题上进行修改。因为Hugo允许在站点根目录下对应的文件夹下的样式去覆盖主题默认的样式，实际就是生成了两份代码，然后在网页中主题中的那一份样式优先级会降低，而我们定义的样式优先级更高，所以会优先使用自定义的样式。 比如，我们新增或者要修改一些主题中scss文件中的样式：可以在站点目录下assert/css 下面创建_custom.scss文件，里面定义我们自定义的css样式，如果需要覆盖主题的样式，最好在样式的属性值后面加上!important表示优先级更高。 同理： 新增的js放在站点根目录下assert/js下。 自定义菜单的html文章内容显示的模块放在layouts\\your_menu\\single.html。 自定义的字体放在static\\fonts，引用时组要在_custom.scss中加入下面的代码，最好引入woff或woff2类型的字体，体积小很多： @font-face { font-family: \"Intel One Mono\"; /* 名称自定义 */ src: url('/fonts/IntelOneMono-Regular.woff2') format('woff2'); } 图片放在static\\images，在引用图片时直接用/images/xxxxxx.png即可。 ","date":"2024-07-02","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/:0:0","tags":["建站"],"title":"FixIt主题优化","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"},{"categories":["建站"],"content":"细节修改 修改常用的FontAwesome图标 有的地方需要fa图标的unicode编码，可以参考这个网站FontAwesome图标大全。 修改代码块背景统一 需要将全局包括黑白主题如下属性： background-color: darken($code-background-color, x%); 统一修改为： background-color: $code-background-color; 代码块加边框 .highlight { \u003e .chroma { @include border-radius($global-border-radius); border: 0.1em solid $code-border-color; [data-theme='dark'] \u0026 { border: 0.1em solid $code-border-color-dark; } } } 修改全局英文字体 将导入的字体放在前面，调整字体显示顺序。 $global-font-family: Rubik, system-ui, -apple-system, BlinkMacSystemFont, PingFang SC, Microsoft YaHei UI, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Helvetica, Arial, sans-serif; 全局搜索所有使用 $global-font-family 的css进行替换。 修改代码中的中英文字体 $code-font-family: Intel One Mono, Source Code Pro, Menlo, Consolas, Monaco, $global-font-family; 同上，全局搜索所有使用 $code-font-family 的css进行替换。 修改全局字体大小和行高 $global-font-size: 18px; $global-line-height: 1.8rem; 修改主页文章分割线的粗细 .summary { border-bottom: 2px dashed $global-border-color !important; } ","date":"2024-07-02","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/:1:0","tags":["建站"],"title":"FixIt主题优化","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"},{"categories":["建站"],"content":"加入小鱼动画 在站点目录下创建文件 assets/js/flyfish.js，内容如下： /** * 源码来自互联网，作者不详 * @modified by Lruihao 2024-05-21 移除依赖 jQuery * @description 一个鱼游动的动画效果 */ const RENDERER = { POINT_INTERVAL: 5, FISH_COUNT: 3, MAX_INTERVAL_COUNT: 50, INIT_HEIGHT_RATE: 0.5, THRESHOLD: 50, init: function () { this.setParameters(); this.setStyle(); this.reconstructMethods(); this.setup(); this.bindEvent(); this.render(); }, setParameters: function () { this.window = window; this.container = document.createElement(\"div\"); this.container.id = \"flyfish\"; this.canvas = document.createElement(\"canvas\"); this.context = this.canvas.getContext(\"2d\"); this.points = []; this.fishes = []; this.watchIds = []; document.querySelector('.footer').appendChild(this.container); }, setStyle: function () { const style = document.createElement(\"style\"); style.innerHTML = ` .footer { position: relative; } #flyfish { position: absolute; width: 100%; height: 250px; overflow: hidden; left: 0; bottom: 0; z-index: -1; pointer-events: none; }`; document.querySelector(\"head\").appendChild(style); }, createSurfacePoints: function () { const count = Math.round(this.width / this.POINT_INTERVAL); this.pointInterval = this.width / (count - 1); this.points.push(new SURFACE_POINT(this, 0)); for (let i = 1; i \u003c count; i++) { const point = new SURFACE_POINT(this, i * this.pointInterval), previous = this.points[i - 1]; point.setPreviousPoint(previous); previous.setNextPoint(point); this.points.push(point); } }, reconstructMethods: function () { this.watchWindowSize = this.watchWindowSize.bind(this); this.jdugeToStopResize = this.jdugeToStopResize.bind(this); this.startEpicenter = this.startEpicenter.bind(this); this.moveEpicenter = this.moveEpicenter.bind(this); this.render = this.render.bind(this); }, setup: function () { this.points.length = 0; this.fishes.length = 0; this.watchIds.length = 0; this.intervalCount = this.MAX_INTERVAL_COUNT; this.containerWidth = this.container.offsetWidth; this.containerHeight = this.container.offsetHeight; this.width = this.containerWidth; this.height = this.containerHeight; this.fishCount = (((this.FISH_COUNT * this.width) / 500) * this.height) / 500; this.canvas.width = this.width; this.canvas.height = this.height; this.reverse = false; this.container.appendChild(this.canvas); this.fishes.push(new FISH(this)); this.createSurfacePoints(); }, watchWindowSize: function () { this.clearTimer(); this.tmpWidth = this.window.innerWidth; this.tmpHeight = this.window.innerHeight; this.watchIds.push(setTimeout(this.jdugeToStopResize, this.WATCH_INTERVAL)); }, clearTimer: function () { while (this.watchIds.length \u003e 0) { clearTimeout(this.watchIds.pop()); } }, jdugeToStopResize: function () { const width = this.window.innerWidth, height = this.window.innerHeight, stopped = width == this.tmpWidth \u0026\u0026 height == this.tmpHeight; this.tmpWidth = width; this.tmpHeight = height; if (stopped) { this.setup(); } }, bindEvent: function () { const self = this; this.window.addEventListener(\"resize\", function() { self.watchWindowSize(); }); this.container.addEventListener(\"mouseenter\", function(event) { self.startEpicenter(event); }); this.container.addEventListener(\"mousemove\", function(event) { self.moveEpicenter(event); }); }, getAxis: function (event) { const offset = this.container.getBoundingClientRect(); return { x: event.clientX - offset.left + this.window.scrollX, y: event.clientY - offset.top + this.window.scrollY, }; }, startEpicenter: function (event) { this.axis = this.getAxis(event); }, moveEpicenter: function (event) { const axis = this.getAxis(event); if (!this.axis) { this.axis = axis; } this.generateEpicenter(axis.x, axis.y, axis.y - this.axis.y); this.axis = axis; }, generateEpicenter: function (x, y, velocity) { if ( y \u003c this.height / 2 - this.THRESHOLD || y \u003e this.height / 2 + this.THRESHOLD ) { return; } const index = Math.round(x / this.pointInterval); if (index \u003c 0 || index \u003e= this.points.length) { return; } this.points[index].interfere(y, velocity); }, controlStatus: fun","date":"2024-07-02","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/:2:0","tags":["建站"],"title":"FixIt主题优化","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"},{"categories":["建站"],"content":"引入自定义自定义的字体 在主题根目录下static\\fonts 中加入自己的字体，没有没有文件夹需要自己创建，字体太大，最好是用压缩的woff2字体。 然后在主题根目录下 asserts/css/_custom.scss 中引入： // 添加自定义字体,防止安卓和ios用其他字体显示 @font-face { font-family: \"Rubik\"; /* 名称自定义 */ src: url('/fonts/Rubik-Regular.ttf') format('truetype'); } 注意，不要放在主题目录下对应的的 fonts 和 _custom.scss 中，方便以后主题的更新，参考：https://github.com/Lruihao/hugo-blog/blob/main/assets/css/_custom.scss。 ","date":"2024-07-02","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/:3:0","tags":["建站"],"title":"FixIt主题优化","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"},{"categories":["建站"],"content":"增加奶油效果 首先将资源放在 在主题的根目录下，assert\\css\\_shaky.scss 中加入 .shaky { display: inline-block; padding: 1px; font-size: 1em; -webkit-transform-origin: center center; -ms-transform-origin: center center; transform-origin: center center; -webkit-animation-name: shaky-slow; -ms-animation-name: shaky-slow; animation-name: shaky-slow; -webkit-animation-duration: 4s; -ms-animation-duration: 4s; animation-duration: 4s; -webkit-animation-iteration-count: infinite; -ms-animation-iteration-count: infinite; animation-iteration-count: infinite; -webkit-animation-timing-function: ease-in-out; -ms-animation-timing-function: ease-in-out; animation-timing-function: ease-in-out; -webkit-animation-delay: 0s; -ms-animation-delay: 0s; animation-delay: 0s; -webkit-animation-play-state: running; -ms-animation-play-state: running; animation-play-state: running; } @-webkit-keyframes shaky-slow { 0% { -webkit-transform: translate(0px, 0px) rotate(0deg) } 2% { -webkit-transform: translate(-1px, 1.5px) rotate(1.5deg) } 4% { -webkit-transform: translate(1.3px, 0px) rotate(-0.5deg) } 6% { -webkit-transform: translate(1.4px, 1.4px) rotate(-2deg) } 8% { -webkit-transform: translate(-1.3px, -1px) rotate(-1.5deg) } 10% { -webkit-transform: translate(1.4px, 0px) rotate(-2deg) } 12% { -webkit-transform: translate(-1.3px, -1px) rotate(-2deg) } 14% { -webkit-transform: translate(1.5px, 1.3px) rotate(1.5deg) } 16% { -webkit-transform: translate(1.5px, -1.5px) rotate(-1.5deg) } 18% { -webkit-transform: translate(1.3px, -1.3px) rotate(-2deg) } 20% { -webkit-transform: translate(1px, 1px) rotate(-0.5deg) } 22% { -webkit-transform: translate(1.3px, 1.5px) rotate(-2deg) } 24% { -webkit-transform: translate(-1.4px, -1px) rotate(2deg) } 26% { -webkit-transform: translate(1.3px, -1.3px) rotate(0.5deg) } 28% { -webkit-transform: translate(1.6px, -1.6px) rotate(-2deg) } 30% { -webkit-transform: translate(-1.3px, -1.3px) rotate(-1.5deg) } 32% { -webkit-transform: translate(-1px, 0px) rotate(2deg) } 34% { -webkit-transform: translate(1.3px, 1.3px) rotate(-0.5deg) } 36% { -webkit-transform: translate(1.3px, 1.6px) rotate(1.5deg) } 38% { -webkit-transform: translate(1.3px, -1.6px) rotate(1.5deg) } 40% { -webkit-transform: translate(-1.4px, -1px) rotate(-0.5deg) } 42% { -webkit-transform: translate(-1.4px, 1.3px) rotate(-0.5deg) } 44% { -webkit-transform: translate(-1.6px, 1.4px) rotate(0.5deg) } 46% { -webkit-transform: translate(-2.1px, -1.3px) rotate(-0.5deg) } 48% { -webkit-transform: translate(1px, 1.6px) rotate(1.5deg) } 50% { -webkit-transform: translate(1.6px, 1.6px) rotate(1.5deg) } 52% { -webkit-transform: translate(-1.4px, 1.6px) rotate(0.5deg) } 54% { -webkit-transform: translate(1.6px, -1px) rotate(-2deg) } 56% { -webkit-transform: translate(1.3px, -1.6px) rotate(-2deg) } 58% { -webkit-transform: translate(-1.3px, -1.6px) rotate(0.5deg) } 60% { -webkit-transform: translate(1.3px, 1.6px) rotate(-0.5deg) } 62% { -webkit-transform: translate(0px, 0px) rotate(-1.5deg) } 64% { -webkit-transform: translate(-1.6px, -1.6px) rotate(-2deg) } 66% { -webkit-transform: translate(1.6px, -1.6px) rotate(0.5deg) } 68% { -webkit-transform: translate(0px, -1.6px) rotate(-2deg) } 70% { -webkit-transform: translate(-1.6px, 1px) rotate(1.5deg) } 72% { -webkit-transform: translate(-1.6px, 1.6px) rotate(2deg) } 74% { -webkit-transform: translate(1.3px, -1.6px) rotate(-0.5deg) } 76% { -webkit-transform: translate(1.4px, 1px) rotate(-0.5deg) } 78% { -webkit-transform: translate(-1px, 1.4px) rotate(2deg) } 80% { -webkit-transform: translate(1.4px, 1.6px) rotate(2deg) } 82% { -webkit-transform: translate(-1.6px, -1.6px) rotate(-0.5deg) } 84% { -webkit-transform: translate(-1.4px, 1.4px) rotate(-2deg) } 86% { -webkit-transform: translate(1px, 1.4px) rotate(-2deg) } 88% { -webkit-transform: translate(-1.4px, 1.4px) rotate(-1.5deg) } 90% { -webkit-transform: translate(-1.6px, -1.6px) rotate(-2deg) } 92% { -webkit-transform: translate(-1.6px, 1.6px) rotate(2deg) } 94% { -webkit-transform: translate(-1.6px, -1","date":"2024-07-02","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/:4:0","tags":["建站"],"title":"FixIt主题优化","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"},{"categories":["建站"],"content":"菜单增加自定义新的项 如果想在博客栏中新增一个“笔记”项，需要在博客根目录下hugo.toml中增加一项 [[menu.main]] identifier = \"notes\" parent = \"\" pre = \"\" post = \"\" name = \"笔记\" url = \"/notes/\" title = \"\" weight = 5 [menu.main.params] icon = \"fa-solid fa-book\" 然后需要在站点content下新建notes文件夹，并且在notes文件夹下创建_index.md，内容如下： --- title: \"笔记\" --- 如果想在“笔记”下创建子项，比如“编程”： [[menu.main]] identifier = \"notes-bc\" parent = \"notes\" pre = \"\" post = \"\" name = \"编程\" url = \"/notes/编程\" title = \"\" weight = 6 [menu.main.params] icon = \"fa-solid fa-book\" 同时，同上创建对应的子目录和_index.md文件即可。 ","date":"2024-07-02","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/:5:0","tags":["建站"],"title":"FixIt主题优化","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/fixit%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"},{"categories":["建站"],"content":"所有的操作都是在Windows平台。 ","date":"2024-07-01","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/:0:0","tags":["建站"],"title":"hugo安装部署","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"},{"categories":["建站"],"content":"安装git 地址：Git - Downloads，下载 64-bit Git for Windows Setup 版本，然后安装即可。 安装时需要勾选必要的选项，成功安装后，鼠标右键菜单中会出现如下两个选项： ","date":"2024-07-01","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/:1:0","tags":["建站"],"title":"hugo安装部署","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"},{"categories":["建站"],"content":"安装hugo git 仓库下载地址：gohugoio/hugo，选择最新的 release 版本，然后直接下载 hugo extended 版本（extended是hugo的复杂版本，功能更多），比如现在最新的是 hugo_extended_0.127.0_windows-amd64.zip。 下载后，解压到某文件目录下，比如：D:\\Hugo\\bin，然后开始配置环境变量： 按 Win+R 键，输入 sysdm.cpl 进入“系统属性”，然后点击“高级”。 点击“环境变量”，然后找到“系统变量”。 在“系统变量”部分，找到名为“Path”的变量，点击“编辑”。 然后点击“新建”，将上面的路径 D:\\Hugo\\bin 输入，然后“确定”。 打开cmd，输入 hugo version 回车，若出现 hugo 版本，则表示 hugo 正常安装。 ","date":"2024-07-01","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/:2:0","tags":["建站"],"title":"hugo安装部署","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"},{"categories":["建站"],"content":"hugo 生成站点 先到对应的文件目录下，右键使用 Git Bash（也可以用 Cmd 或者 PowerShell 打开），生成一个自己的站点名 SiteName： hugo new site SiteName 这样就在当前目录下生成一个 SiteName 文件夹，然后进入文件中，目录结构如下： archetypes/ assets/ content/ data/ i18n/ layouts/ static/ themes/ hugo.toml 创建文章 创建一个 about.md 页面： hugo new about.md about.md 生成到了 content/about.md 下面，打开 about.md 内容如下： +++ title = 'About' date = 2024-06-25T21:55:16+08:00 draft = true +++ 正文内容... 内容是 Markdown 格式，如果不了解 Markdown 语法，需要先熟悉一下。 +++ 之间的内容是 TOML 格式的，根据喜好也可以换成 YAML 格式（使用 --- 标记）或者 JSON 格式。 因为 about.md 界面大多是用于显示我关于栏的内容，是一个单独的界面。 创建文章时，一般会放到 post 目录，方便之后生成聚合页面。可以编辑文章，先将 draft 属性改为 false 或者删掉，还可以添加其他属性，这里先不赘述。 hugo new post/first.md ","date":"2024-07-01","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/:3:0","tags":["建站"],"title":"hugo安装部署","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"},{"categories":["建站"],"content":"hugo安装主题 可以去 hugo主题商店 找到自己喜欢的主题。 这里我选择的是 FixIt 主题，作者是国人所以对中文支持的很好，并且比较现代化，支持的格式比较多。 主题 github 地址：hugo-fixit/FixIt 主题 wiki 地址：FixIt 作者博客：菠菜眾長 - 李瑞豪的博客。 下载最新的 release 版本，然后在站点 SiteName\\theme 目录下创建主题文件夹 FixIt，将下载的 release 版 zip 压缩包里的文件全部解压到 SiteName\\theme\\FixIt 下。 然后在站点的根目录执行 hugo 命令： hugo server --theme=FixIt --buildDrafts 如果正常的话，会出现一个 web server 地址：http://localhost:1313。 然后在浏览器里打开这个地址（注意：为了避免浏览器缓存，可以使用 InPrivate 隐身模式打开），然后看皮肤是否运行正常，这里先不说 hugo.toml 主题相关的其他配置，只是测试主题是否正常。 ","date":"2024-07-01","objectID":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/:4:0","tags":["建站"],"title":"hugo安装部署","uri":"/collections/hugo%E5%BB%BA%E7%AB%99%E6%97%A5%E5%BF%97/hugo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"},{"categories":null,"content":"\u003cno value\u003e's friends","date":"2024-07-01","objectID":"/abouts/","tags":null,"title":"关于我","uri":"/abouts/"},{"categories":null,"content":" 全民游戏制作人们，大家好，我是练习时长两年半的个人练习生，喜欢唱、跳、rap、🏀，music！ 咳咳！大家好，我是一名练习时长四年的游戏后端开发，从 20 年大四实习到现在一直在上海某游戏厂打工！平时为人低调不擅言辞，喜欢玩游戏（年龄上来了玩几局就lay了~），跑步（菜的一），写文章（文笔不好，主打一个自由发挥）等。 由于个人水平非常有限，本站分享的内容难免有误，还请批评指正！ ","date":"2024-07-01","objectID":"/abouts/:0:0","tags":null,"title":"关于我","uri":"/abouts/"},{"categories":null,"content":"博客介绍 我为什么创建此博客？ 此 Blog 的诞生纯属心血来潮，老实说这不是第一次，可能也不是最后一次。 因为在大学期间，我就已经开始折腾过 WorldPress、Typecho 等，因为是动态博客需要数据库等环境复杂，最后因为云服务器到期数据备份非常难搞直接放弃了这一套。中间又使用过博客园和 CSDN 因为各种问题以及自己的需求还是不太满意，后来转战静态博客，开始折腾 Hexo、VuePress、Jeklly、Hugo 等，但是写作略显复杂，不过可以部署在 Github 的 Pages 上倒是省了云服务器这必须是好评的，而且文章直接使用 Markdown 渲染不用考虑换博客的兼容性问题。但是最后有几阵子工作非常忙，经常加班熬夜也没坚持住直接歇菜了（游戏公司懂得都懂~）。 除此之外，在这几年我也用过好几款笔记软件，大学时是为知笔记尊贵的VIP用户，但是后来接触 Markdown 后发现支持的不好就换成了有道云笔记，虽说它支持 Markdown，但是这也能算是支持？工作后开始用语雀，刚开始觉得挺好用，用了一年多记了一些笔记，偶然发现了 notion 又打开了新世界就去用 notion 了，又用了一段时间，发现国产 wolai 神似 notion 的国内版，完整的中文支持，还有AI写作加持，用着挺舒适直接冲了VIP，目前一直在使用中。 有一次在之前的笔记软件找记录的知识，突然感觉对之前的笔记目录甚至有点陌生，找了一会没找到，最后全局搜到的。突然觉得自己用过这么多笔记产品，所有的知识积累略显凌乱，还有之前各个博客平台的文章也是零零散散。 由此心血来潮，我必须重建个人网站用来整合自己的积累，包括但不限于个人博客、笔记、生活、分享等内容，留住一片属于自己的天空。嗯！大概就是这样了！ 最后，暂时无法抒发自己的感受，后面再补上吧~ ","date":"2024-07-01","objectID":"/abouts/:1:0","tags":null,"title":"关于我","uri":"/abouts/"},{"categories":null,"content":"WindSun's friends","date":"2024-07-01","objectID":"/friends/","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":"基本信息 注意 Hi~，如果你想要交换链接，请按下面的格式在留言区留言哦！ - nickname: WindSun avatar: https://blog.codepeak.cn/images/logo.jpg url: https://blog.codepeak.cn description: 博观而约取，厚积而薄发! ","date":"2024-07-01","objectID":"/friends/:1:0","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":null,"content":"链接收藏 \u003c!DOCTYPE html\u003e AI ChatGPT（OpenAI） Copilot（微软） 文心一言（百度） 豆包AI（字节跳动） 通义千问（阿里） 秘塔AI搜索 天工AI搜索 编程 数据结构/算法可视化 C++ cplusplus.com（在线文档） cppreference.com（在线文档） cpp.sh（在线编译C++） onlinegdb.com（在线编译调试C++） CMake（在线文档） Makefile（在线文档） GDB（在线文档） C++教程 Linux man.he - 在线 Linux Man Pages linux.die - 在线 Linux Man Pages Linux265 - Linux命令分类 服务器开发 Google 开源项目代码风格指南 msgpack官网 ProtoBuf 官方API Redis 官方文档 游戏客户端开发 Unreal Engine 文档 Red Blob Games gamedev论坛 kodeco博客 开发工具 Git官网教程 SVN官网教程 vim练级手册 vim插件网 PlantUML在线UML图 ProcessOn在线画图 临时邮箱邮件测试 实用工具 QtScrcpy - 电脑操作手机投屏工具 AnLink - 电脑操作手机投屏工具 在线PS 娱乐 暴雪游戏亚服官网 暗黑核 NGA论坛-OW 软件分享 殁漂遥 mefcl 423down 蜜糖商店 论坛 52破解 远景论坛 装备前线 tonymacx86 - 黑苹果 进入 ","date":"2024-07-01","objectID":"/friends/:2:0","tags":null,"title":"友情链接","uri":"/friends/"},{"categories":["redis"],"content":"redis键操作的命令 redis是一个使用 ANSI C 编写的开源、支持网络、基于内存、分布式、可选持久性的key-value键值对存储数据库。其键对应的值可以是多种类型的数据结构，下面是一些对redis键操作的基本命令。 获得某个键的值 KEYS pattern //?单个字符 *任意字符 []括号间的任意字符带-时表示范围 \\?转义 获得所有的键值 KEYS * 判断一个键是否存在 EXISTS key 删除键 DEL key [key ...] 获得键值的数据类型 TYPE key ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:1:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"字符串类型（string） 字符串类型是Redis中最基本的类型，能存储任何形式的字符串，包括二进制。允许存储的数据的最大容量是512MB。字符串类型是其他4种数据类型的基础，其他数据类型从某种角度上只是组织字符串的形式不同。虽说是字符串，但是和C语言中的字符串还是有些区别的。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:2:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"常用命令 赋值 SET key value 取值 GET key 递增键值（当存储的整数时，可用此命令递增，返回递增后的值，不存在键时会默认为0，不是整数时会出错） INCR key 递减键值 DECR key 增加指定整数 INCRBY key num 减少指定整数 DECRBY key num 增加指定浮点数 INCRBYFLOAT key num 向尾部追加值 APPEND key value 获取字符串长度 STRLEN key 同时获得/设置多个键值 MGET key [key ...] MSET key value [key value ...] 设置位的值操作（键值一个字节8位，当超过键值二进制位长度时，会自动将中间的二进制位设置为0，设置一个不存在的键的二进制的位的值时，会自动将前面的位赋值为0。利用位操作可以非常紧促的存储bool值，而且SETBIT和GETBIT的时间复杂度都是O(1)） SETBIT key offset value BITOP operation destkey key [key ...] 获得位的值操作（当超过二进制位的长度时，默认为0） GETBIT key offset 获得键值中二进制位的值是1的个数 BITCOUNT key [start] [end] 对多个键值进行位运算（运算结果存储在destkey中） BITOP AND/OR/XOR/NOT destkey key [key ...] 指定键的第一个位值是0或1的位置（返回的结果的偏移量是从头开始算起的，与begin和end的起始字节无关，若不设置结束字节且键值的所有二进制位都是1，则当查询值为0的二进制偏移量时，返回的是键值长度的下一个字位的偏移量，因为redis会认为键值长度之后的二进制位都是0。） BITPOS key 0/1 // 指定键值第一个二进制为0/1的偏移量 BITPOS key 0/1 begin end // begin和end分别是查询查询指定键值begin字节到end字节之间出现的第一个值为0/1的二进制位的偏移量 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:2:1","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"注意事项 Redis的底层是由C语言实现的，但是redis中的字符串和C语言的字符串还是有很多区别。 C语言的字符串后面多了个'\\0'，做为字符串终止符，长度为N的字符串，会用长度为N+1的字符数组来表示。有如下缺点： C语言字符串并没有记录自身长度。 需要根据空字符’\\0’判断字符串是否结束。 引起的问题如下： 获取字符串长度复杂度高。 拼接字符串容易出现缓冲区溢出，要通过内存重分配来扩展底层字符数组空间大小内存重分配是个十分耗时的操作。 不能存储二进制数据，如果数据本身就包含空字符串’\\0’，而代码会认为是字符串终止；像图片、音频、视频、压缩文件这样的二进制数据是会包含空字符串’\\0’的，所以数据会出现问题。 Redis中的存储字符串并不是C语言那么简单，而是使用了SDS结构，并且可以存储包含了’\\0’的二进制，简单的结构定义如下： struct SDS { int free = 3; int len = 5; char* buf = new char[n]; }; 引入了两个变量free和len属性来夺取字符串长度，时间复杂度为O(1)。 采用了空间预分配和惰性空间释放。当对SDS进行空间扩展时，会分配额外未使用空间。如果SDS修改之后，SDS的长度(len属性的值)小于1MB，那么就会分配和len属性同样大的未使用空间，也就是free属性会和len属性相同，相当于将原数组长度二倍。如果SDS修改之后，SDS的长度(len属性的值)大于或等于1MB，那么就会分配固定的1MB未使用空间。当缩短操作时，想要删掉N个字符后，free就增加N，不做内存重分配操作，空间先给留着后面能继续用。这两种操作都是为了减少内存重分配操作。 C字符串不能存储二进制数据的原因是只能根据 ‘\\0’ 来判断数据是否结束，不能保证其完整性，但因为 SDS 的 len 属性，无论你数据里有多少 ‘\\0’ 都没关系，我是根据 len 属性值来判断数据长度的，必定是完整的，所以 SDS 可以安全地存储二进制数据。 SDS在字符串后面加了’\\0’，保持和C字符串一样的特性，在一定的情况下可以直接用C语言的函数，避免了不必要的函数重写。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:2:2","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"散列类型（hash） redis本来就是采用字典结构以键值对的形式存储数据的，而散列类型的键对应的值也是一种字典结构，相当于字典结构下的字典结构了，其存储了字段 field 和字段值 value 的映射。字段值只能是字符串，不能是其他类型，可以最大包含 2的32次方-1个字段。一般用来表示一个对象中的各种属性值。比如：汽车:001-\u003e(颜色-\u003e白色;名字-\u003e奥迪;价格-\u003e100万)。对比关系数据库，redis更加灵活，在关系数据库中，需要建二位表，所有的记录都有相同的属性，无法单独为某条记录增减属性。redis散列类型不存在这个问题，每个键对应的字段可以自由增减而不影响其他键。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:3:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"常用命令 赋值（不区分插入和更新操作，当执行插入操作返回1，当执行更新操作返回0，当redis键不存在会自动创建，不能使用操作字符串键的命令操作散列键，会提示错误） HSET key field value //给字段赋值 HMSET key field value [field value ...] //同时设置多个字段值 取值 HGET key field value //获取字段的值 HMGET key field [field ...] //同时获取多个字段的值 取所有字段和字段值 HGETALL key 判断字段是否存在（存在返回1，不存在返回0） HEXISTS key field 仅当字段不存在时赋值（如果字段已存在，不执行任何操作） HSETNX key field value 字段值增加指定数字（散列没有HINCR自增命令，也没有HDECRBY命令） HINCRBY key field increment 删除字段（返回被删除字段个数） HDEL key field [field ...] 只获取字段名或字段值 HKEYS key HVALS key 获得字段数量 HLEN key ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:3:1","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"列表类型（list） redis键对应的值的类型可以时列表list类型，列表类型可以存储一个有序的字符串列表，常用的操作是向列表两端添加元素，或者获得列表的某一个片段。 列表内部使用双向链表实现，向列表两端添加元素的时间复杂度为O(1)，获取越进两端的元素越块。但是通过索引访问元素比较慢。一般用于特定场景下，可以快速的完成关系数据库难以完成的场景，可以作为队列或栈使用，一个列表类型的键值最多能容纳2的32次方-1个元素。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:4:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"常用命令 向列表两端增加元素 LPUSH key value [value ...] //向列表左端增加元素，返回增加元素后列表的长度 RPUSH key value [value ...] //向列表右端增加元素，返回增加元素后列表的长度 从列表两端弹出元素 LPOP key //从列表左端弹出元素，第一步将列表左端元素从列表移除，第二步返回被移除的元素值 RPOP key //从列表右端弹出元素 获取列表中元素的个数 LLEN key 获得列表片段（返回索引从start到end之间的所有元素，索引从0开始，包含end的元素，当为负数时，表示用右边开始，-1表示右边第一个参数，显然 0 -1 可以获取列表中所有元素。当start索引位置比stop的索引位置靠后，则会返回空列表。当stop大于实际索引范围，则会返回到列表最右边元素） LRANGE key start stop 删除列表中指定的值（删除列表中前count个值为value的元素，返回实际删除元素的个数，count\u003e0从左边开始删除，count\u003c0从右边开始删除，count=0删除所有值为value的元素） LREM key count value 获得指定索引元素值（可当数组使用，index是负数表示从右边开始计算，最右边是-1） LINDEX key index 设置指定索引元素值 LSET key index value 只保留列表指定片段（删除指定索引范围之外的所有元素，使用和LRANGE类似，LTRIM和LPUSH命令一起使用可用来限制类表中元素的数量） ITRIM key start end 向列表中插入元素（在列表中从左到右查找值为pivot的元素，根据第二个参数是BEFORE还是AFTER决定将value插入到该元素前面还是后面） LINSERT key BEFORE|AFTER pivot value 将元素从一个列表转到另一个列表（顾名思义先从src执行RPOP一个元素，LPUSH这个元素到dest中，整个过程是原子的，当src和dest相同时，会将队尾元素移动到队首） RPOPLPUSH src dest ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:4:1","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"集合类型（set） 集合中，每个元素都是不同的，而且没有顺序，一个集合类型的键值可以存储2的32次方-1个字符串，集合类型常用操作是向集合中加入或删除元素、判断某个元素是否存在等。集合使用值为空的hashtable实现，这些操作的时间复杂度都是O(1)，最方便的是多个集合之间还可以进行并集、交集、差集运算。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:5:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"常用命令 增加集合元素（向set中增加一个元素，如果元素不存在则创建，如果元素存在就忽略，返回成功加入元素的数量） SADD key member [member ...] 删除集合元素 SREM key member [member ...] 获得集合中所有元素 SMEMBERS key 判断元素是否在集合中（时间复杂度O(1)，存在返回1，不存在返回0） SISMEMBER key member 集合运算（支持同时传入多个键） SDIFF key [key ...] //执行差集运算 A-B表示所有属于A且不属于B的元素构成的集合 {1,2,3} - {2,3,4} = {1} SDIFFSTORE dest key [key ...] //执行差集运算，但将结果存储到dest中 SINTER key [key ...] //执行交集运算 A∩B表示属于A且属于B的元素构成的集合 {1,2,3} ∩ {2,3,4} = {2,3} SINTERSTORE dest [key ...] //执行交集运算，但将结果存储到dest中 SUNION key [key ...] //执行并集运算 A∪表示所有属于A或属于B构成元素的集合 {1,2,3} ∪ {2,3,4} = {1,2,3,4} SUNIONSTORE dest [key ...] //执行并集运算，但将结果存储到dest中 获得集合中元素的个数 SCARD key 随机获得集合中的元素（可以传递参数count获得多个元素，count为正数时，会最多获得count个不重复的元素，当count值大于集合中的元素个数，则返回元素中全部元素。count为负数时，会从集合中获得|count|个元素，元素可能相同。首先会从桶中随机选择一个非空桶，再从桶中所有元素随机选择一个元素，当桶中元素数量越少时，被选中的可能性越大） SRANDMEMBER key [count] 从集合中弹出一个元素（由于集合是无序的，所以SPOP会从集合中选择一个元素弹出） SPOP key ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:5:1","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"有序集合类型（sorted set） 在集合的基础上，有序集合为集合中的每个元素都关联了一个分数，使得我们不仅可以完成插入，删除，和判断元素是否存在等操作，还能够获得分数最高（最低）的前N个元素、获得指定范围内的元素等与分数有关的操作，虽然集合中每个元素都是不同的，但是分数可以相同。有序集合类型是使用hash表和跳跃表实现的，所以即使读取中间部分的数据也很快。有序集合中可以更改分数调整元素的位置。有序集合是五种数据结构类型中最高级的类型。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:6:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"常用命令 增加元素（score对应元素的分数，如果元素已存在，会使用新的分数替换原有分数，分数不仅可以是整数，还可以是双精度浮点数，+inf/-inf表示正无穷和负无穷） ZADD key score member [score member] 获得元素分数 ZSCORE key member 获得排名在某个范围的元素列表（返回索引从start到stop之间的所有元素，包含两端元素，索引从0开始，负数-1代表最后一个元素，如果同时获得元素的分数的话，可以加上WITHSCORES，ZRANGE事件复杂度是O(log(n)+m)，n为有序集合基数，m为返回的元素的个数。如果两个元素分数相同，redis会按照ASCII字典顺序进行排列，如果中文，会使用UTF-8编码顺序排列） ZRANGE key start stop [WITHSCORES] //按照元素分数，从小到大顺序 ZREVRANGE key start stop [WITHSCORES] //按照元素分数，从大到小顺序 获得指定分数范围的元素（返回分数在min到max之间的元素，如果希望分数范围不包括端点值，在分数前加上\"(“符号，min和max还支持无穷大+inf/-inf表示正无穷和负无穷。获得元素列表基础上向后偏移offset个元素，并且只获取前count个元素。） ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count] ZREVRANGEBYSCORE key max min [WITHSCORES] [LIMIT offset count] 增加某个元素的分数（返回是更改后的分数） ZINCRBY key increment menber 获得集合中元素数量 ZCARD key 获得指定分数范围内的元素个数（min和max的特性与ZRANGEBYSCORE一样） ZCOUNT key min max 删除一个或多个元素（成功删除的元素个数） ZREM key member [member ...] 按照排名范围删除元素（元素分数从小到大） ZREMRANGEBYRANK key start stop 按照分数范围删除元素（min和max的特性与ZRANGEBYSCORE一样，返回删除元素的数量） ZREMRANGEBYSCORE key min max 获得元素的排名 ZRANK key member //元素分数从小到大的顺序 ZREVRANK key member //元素分数从大到小的顺序 计算有序集合的交集/并集（计算多个有序集合的交集并将结果存在dest键中，返回dest键中的元素个数。dest中的元素个数是由AGGREGATE参数决定的，当为SUM时，dest键中元素的分数是每个集合中该元素分数的和，当为MIN时，dest键中元素分数是每个集合中该元素的最小值，当为MAX时，dest键中元素分数是每个集合中该元素的最大值。还能通过WEIGHTS参数设置每个集合的权重，每个集合在参与计算时元素的分数会被乘上该权重。） ZINTERSTORE dest numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] //交集 ZUNIONSTORE dest numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX] //并集 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:6:1","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"Redis事务 事务是一组命令的集合，也是Redis最小的执行单位，一个事务中的命令要么都执行，要么都不执行。 事务的首先由 MULTI 命令开始，告诉Redis后面的命令是一个事务，然后使用 EXEC 命令告诉Redis将等待执行的事务队列中的所有命令按照发送顺序依次执行，返回值就是这些命令的返回值组成的列表，顺序和命令顺序相同。除此之外，Redis保证了一个事务内的命令依次执行而不被其他命令插入。 如果在命令 EXEC 之前客户端断线了，会清空事务队列，事务中的所有命令都不执行。但一旦发送了 EXEC 命令，所有的命令都会被执行，即使短线也没关系。事务也是在 EXEC 之后执行的所有命令的。 事务的错误处理： 语法错误。如果事务的多个命令中某个命令语法出错，只要有一个命令有语法错误，执行 EXEC 命令后 Redis 就会直接返回错误，连语法正确的命令也不会执行。 运行错误。语法都是正确的，但是运行时才出现的错误，比如使用散列类型的命令操作集合类型的键，因为语法检查阶段无法发现，会被 Redis 接受并执行。即使一条命令运行时出现了错误，事务中的其他命令依然会继续执行。开发者必须在开发层面上规划好键名规范使用。 Redis 事务没有关系数据库中的回滚（RollBack）功能。正因为如此 Redis 在事务上可以保持简洁和快速。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:7:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"Watch命令 watch命令可以监控一个或多个键，一旦有一个键被修改，之后的事务就不会执行。watch 不能保证其他客户端不修改这一值。执行 EXEC 命令后，会取消对所有键的监控。如果没执行 EXEC 但想取消对键的监控，可以使用 UNWATCH 命令来取消监控，保证其他事务的执行不受影响。 比如： SET key 1 WATCH key SET key 2 MULTI set key 3 EXEC 上面在WATCH前，执行修改了key值，所以最后事务中的 set key 3 没有执行，EXEC 后返回空结果。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:8:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"过期时间 使用 EXPIRE 命令设置一个键的过期时间，到时间后会自动删除它。返回1时，表示设置成功。如果再次使用 EXPIRE 命令会重新设置键的过期时间。对其键值进行操作的命令均不会影响键的过期时间（INCT、LPUSH、HSET、ZREM）。 EXPIRE key seconds 其中 seconds 表示键的过期时间，单位是秒，表示在多少秒后自动删除该键。 获得一个键的剩余被删除时间： TTL key 当 key 不存在时，TTL 命令会返回 -2。当没有为键设置过期时间时，TTL 返回值为 -1. 取消键的到期时间： PERSIST foo 除此之外，使用 SET 或 GETSET 命令为键赋值时也会同时清除键的到期时间。 如果想要更精准的过期时间，可以使用 PEXPIRE 命令，以毫秒为单位。 注意：如果使用 WATCH 命令监测了一个拥有过期时间的键，该键时间到期自动删除，并不会被 WATCH 命令认为该键被改变。 EXPIREAT 和 PEXPIREAT 使用 UNIX 时间作为第二个参数表示键的过期时刻。 EXPIREAT key unixtimestampsec PEXPIREAT key unixtimestampmsec ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:9:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"缓存策略 可以让 Redis按照一定的规则淘汰不需要的缓存键，具体方法是修改配置文件的 maxmemory 参数，限制 Redis 最大可用内存大小，单位是字节，当超过这个限制时，Redis会依据 maxmemory-policy 参数指定的策略来删除不需要的键直到 Redis 占用的内存小于指定内存。 maxmemory-policy 支持的规则如下，其中 LRU 即最近最少使用的键在未来一段时间内不会被用到，当需要空间时，这些键是可以被删除的。 规则 说明 volatile-lru 使用LRU算法删除一个键（只对设置了过期时间的键） allkeys-lru 使用LRU算法删除一个键 volatile-random 随机删除一个键（只对设置了过期时间的键） allkeys-random 随机删除一个键 volatile-ttl 删除过期时间最近的一个键 noeviction 不删除键，只返回错误 当设置为 allkeys-lru 时，一旦 Redis 占用的内存超过了限制值，就会不断的删除内存中最近最少使用的键，知道内存小于限制值。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:10:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"排序 Redis自带的有序集合常见的使用场景是大数据排序，如游戏的玩家排行榜等。很少会获得有序集合中的全部数据。同样 Redis 任务开发者在做完交集、并集后不需要直接获得全部结果，而是将结果存到新的键中以便后续处理，这解释为什么有序集合只有 ZINTERSTORE 和 ZUNIONSTORE 命令，而没有 ZINTER 和 ZUNION 命令。 Redis 提供了 SORT 命令对键的值进行排序。可以使用的类型包括：列表类型、集合类型、有序集合类型的键。可以完成与关系数据库中的连接查询相似的任务。 SORT key 普通排序是使用双精度浮点数进行排序的，如果要按字段顺序排列非数字元素，需要加 ALPLA 参数： SORT key ALPHA 默认从小到大排序，更改为从大到小排序： SORT key DESC LIMIT 是指定范围结果参数： SORT key LIMIT m n ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:11:0","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"BY参数 很多情况下，我们想根据键值对应的某个属性进行排序，比如散列类型中的time属性，可以使用 BY 关键字。 BY 参考键 参考键可以是字符串类型键或散列类型的的某个字段（键名-\u003e字段名）。如果提供了 BY 参数，SORT 命令将不再依据元素本身的值进行排序，而是对每个元素使用元素的值替换参考键中的第一个*并获得其值，然后依据该值对元素进行排序。 比如: SORT tag:ruby:posts BY post:*-\u003etime 将会读取 post:2、post:6、post:12、post:26 几个散列键中的 time 字段的值并依次决定 tag:ruby:posts 键中各个文章ID的顺序。 处理散列类型以外，参考键还可以是字符串类型，比如： LPUSH sortbylist 2 1 3 SET itemscore:1 50 SET itemscore:2 100 SET itemscore:3 -10 SORT sortbylist BY itemscore:* DESC \"2\" \"1\" \"3\" 使用 BY 但是参考键名不包含 * 时，SORT 命令将不会执行排序操作，因为 Redis 认为无意义。但在不需要排序但需要借助 SORT 命令获得与元素相关联的数据时，常量键名很有用。 如果几个元素的参考键值相同，则 SORT 命令会比较元素本身的值来决定元素的顺序。 当某个元素的参考键不存在时，会默认参考键的值为 0，会大于一些参考键是负数值。 * 只能在 -\u003e 符号的前面才会认为是参考键，如果在后面会被当成字段名本身而不会作为占位符被元素的值替换。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:11:1","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"GET参数 GET参数不影响排序，作用是使 SORT 命令返回的结果不再是元素自身的值，而是 GET 参数中指定的键值。 GET参数的规则和 BY 参数一样，GET 参数也支持字符串类型和散列类型的键，并使用 * 作为占位符。 例如：要实现排序后直接返回ID对应的文章标题： SORT tag:ruby:posts BY post:*-\u003etime DESC GET post:*-\u003etitle 一个 SORT 命令中可以有多个 GET 参数（但 BY 参数只能有一个）。 SORT tag:ruby:posts BY post:*-\u003etime DESC GET post:*-\u003etitle GET post:*-\u003etime 如果还需要返回文章ID，可以使用 GET #，用来返回元素本身。 SORT tag:ruby:posts BY post:*-\u003etime DESC GET post:*-\u003etitle GET post:*-\u003etime GET # ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:11:2","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"STORE参数 默认情况下，SORT 直接返回排序结果，如果希望保存排序结果，可以使用 STORE 参数。 例如：将结果保存在 sort.result 键中： SORT tag:ruby:posts BY post:*-\u003etime DESC GET post:*-\u003etitle GET post:*-\u003etime GET # sort.result 保存后的键的类型为列表类型，如果键已存在会覆盖它。加上 SOTRE 参数后 SORT 返回值为结果的个数。 STORE 参数常用来结合 EXPIRE 命令缓存排序结果。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:11:3","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["redis"],"content":"性能优化 SORT 命令比较复杂，使用不好很容易性能瓶颈。时间复杂度是O(n+mlog(m))，n表示排序的列表的元素个数，m表示返回的个数。 当n较大时，性能较低，而且在排序前会建立一个长度为 n 的容器来存储待排序元素，虽然是一个临时的过程，但同时进行较多的大数据量排序将会严重影响性能。 注意以下几点： 尽可能减少待排序键中元素的数量（使N尽可能小）。 使用LIMIT参数只获取需要的数据（使M尽可能小）。 如果排序的数据量较大，可以使用 STORE 参数将结果缓存。 ","date":"2024-01-15","objectID":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/:11:4","tags":["redis"],"title":"redis基础知识","uri":"/posts/redis%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"categories":["English"],"content":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I’ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won’t cover using CSS to style your theme. We’ll start with creating a new site with a very basic template. Then we’ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites. In this tutorial, commands that you enter will start with the “$” prompt. The output will follow. Lines that start with “#” are comments that I’ve added to explain a point. When I show updates to a file, the “:wq” on the last line means to save the file. Here’s an example: ## this is a comment $ echo this is a command this is a command ","date":"2017-08-30","objectID":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/:1:0","tags":["English"],"title":"English Test","uri":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/"},{"categories":["English"],"content":"Some Definitions There are a few concepts that you need to understand before creating a theme. ","date":"2017-08-30","objectID":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/:2:0","tags":["English"],"title":"English Test","uri":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/"},{"categories":["English"],"content":"Skins Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors. You have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin. Your second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it? The difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can’t be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it. The rest of this tutorial will call a skin created in the themes/ directory a theme. Note that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme. ","date":"2017-08-30","objectID":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/:2:1","tags":["English"],"title":"English Test","uri":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/"},{"categories":["English"],"content":"The Home Page The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html. ","date":"2017-08-30","objectID":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/:2:2","tags":["English"],"title":"English Test","uri":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/"},{"categories":["English"],"content":"Site Configuration File When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it. Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file. ","date":"2017-08-30","objectID":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/:2:3","tags":["English"],"title":"English Test","uri":"/posts/%E8%8B%B1%E6%96%87%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Markdown # H1 ## H2 ### H3 #### H4 ##### H5 ###### H6 ### Duplicate Header ### Duplicate Header H1 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:0:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"H2 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:1:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"H3 H4 H5 H6 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:1:1","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Duplicate Header ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:1:2","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Duplicate Header ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:1:3","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Paragraphs This is a paragraph. I am still part of the paragraph. New paragraph. This is a paragraph. I am still part of the paragraph. New paragraph. ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:2:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Anchor Define anchor by {#section-id} Something ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:3:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Footnote This is a footnote1 A footnote on “label”2 The footnote for definition3 A footnote with link4 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:4:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Inline `inline block` \u003ckbd\u003ectrl\u003c/kbd\u003e+\u003ckbd\u003ealt\u003c/kbd\u003e+\u003ckbd\u003edel\u003c/kbd\u003e **bold 1** and __bold 2__ *italic 1* and _italic 2_ ~~strike~~ ***bold 1 and italic 1*** ___bold 2 and italic 2___ __*bold 2 and italic 1*__ **_bold 1 and italic 2_** ~~*strike italic 1*~~ and *~~strike italic 2~~* ~~_strike italic 2_~~ and _~~strike italic 2~~_ ~~**strike bold 1**~~ and **~~strike bold 1~~** ~~__strike bold 2__~~ and __~~strike bold 2~~__ ~~***strike italic 1 bold 1***~~ and ***~~strike italic 1 bold 1~~*** ~~___strike italic 2 bold 2___~~ and ___~~strike italic 2 bold 2~~___ **~~*strike italic 1 bold 1*~~** and *~~**strike italic 1 bold 1**~~* __~~_strike italic 2 bold 2_~~__ and _~~__strike italic 2 bold 2__~~_ **~~_strike italic 2 bold 1_~~** and _~~**strike italic 2 bold 1**~~_ __~~*strike italic 1 bold 2*~~__ and *~~__strike italic 1 bold 2__~~* inline block ctrl+alt+del bold 1 and bold 2 italic 1 and italic 2 strike bold 1 and italic 1 bold 2 and italic 2 bold 2 and italic 1 bold 1 and italic 2 strike italic 1 and strike italic 2 strike italic 2 and strike italic 2 strike bold 1 and strike bold 1 strike bold 2 and strike bold 2 strike italic 1 bold 1 and strike italic 1 bold 1 strike italic 2 bold 2 and strike italic 2 bold 2 strike italic 1 bold 1 and strike italic 1 bold 1 strike italic 2 bold 2 and strike italic 2 bold 2 strike italic 2 bold 1 and strike italic 2 bold 1 strike italic 1 bold 2 and strike italic 1 bold 2 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:5:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Links Web image ![Web Picture](https://count.getloli.com/get/@even-preview?theme=konachan \"Web Picture\") Local image ![Local Picture](logo-revolunet-carre.jpg \"Local Picture\") contact@revolunet.com @revolunet Issue #1 https://github.com/revolunet/sublimetext-markdown-preview/ This is a link https://github.com/revolunet/sublimetext-markdown-preview/. This is a link \"https://github.com/revolunet/sublimetext-markdown-preview/\". With this link (https://github.com/revolunet/sublimetext-markdown-preview/), it still works. Web image Web Picture Local image Local Picture www.google.com contact@revolunet.com @revolunet Issue #1 https://github.com/revolunet/sublimetext-markdown-preview/ This is a link https://github.com/revolunet/sublimetext-markdown-preview/. This is a link “https://github.com/revolunet/sublimetext-markdown-preview/\". With this link (https://github.com/revolunet/sublimetext-markdown-preview/), it still works. ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:6:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Abbreviation Abbreviations source are found in a separate markdown file specified in frontmatter. The HTML specification is maintained by the W3C. *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium The HTML specification is maintained by the W3C. ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:7:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Unordered List Unordered List - item 1 * item A * item B more text + item a + item b + item c * item C - item 2 - item 3 Unordered List item 1 item A item B more text item a item b item c item C item 2 item 3 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:8:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Ordered List Ordered List 1. item 1 1. item A 2. item B more text 1. item a 2. item b 3. item c 3. item C 2. item 2 3. item 3 Ordered List item 1 item A item B more text item a item b item c item C item 2 item 3 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:9:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Task List Task List - [X] item 1 * [X] item A * [ ] item B more text + [x] item a + [ ] item b + [x] item c * [X] item C - [ ] item 2 - [ ] item 3 Task List item 1 item A item B more text item a item b item c item C item 2 item 3 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:10:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Mixed Lists Really Mixed Lists should break with sane_lists on. Mixed Lists - item 1 * [X] item A * [ ] item B more text 1. item a 2. itemb 3. item c * [X] item C - item 2 - item 3 Really Mixed Lists - item 1 * [X] item A - item B more text 1. item a + itemb + [ ] item c 3. item C 2. item 2 - [X] item 3 Mixed Lists item 1 item A item B more text item a itemb item c item C item 2 item 3 Really Mixed Lists item 1 item A item B more text item a itemb item c item C item 2 item 3 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:11:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Dictionary Dictionary : item 1 item 2 item 3 Dictionary item 1 item 2 item 3 ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:12:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Blocks This is a block. This is more of a block. This is a block. This is more of a block. ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:13:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Block Quotes \u003e This is a block quote \u003e\u003e How does it look? This is a block quote. How does it look? I think it looks good. ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:14:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Fenced Block Assuming guessing is not enabled. ``` // Fenced **without** highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(\"document.z.textdisplay.value = newMake()\", i*300); setTimeout(\"window.status = newMake()\", i*300); } } ``` ```javascript // Fenced **with** highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(\"document.z.textdisplay.value = newMake()\", i*300); setTimeout(\"window.status = newMake()\", i*300); } } ``` // Fenced **without** highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(\"document.z.textdisplay.value = newMake()\", i*300); setTimeout(\"window.status = newMake()\", i*300); } } // Fenced **with** highlighting function doIt() { for (var i = 1; i \u003c= slen ; i^^) { setTimeout(\"document.z.textdisplay.value = newMake()\", i*300); setTimeout(\"window.status = newMake()\", i*300); } } ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:15:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Tables | _Colors_ | Fruits | Vegetable | | ------------- |:---------------:| -----------------:| | Red | *Apple* | [Pepper](#Tables) | | ~~Orange~~ | Oranges | **Carrot** | | Green | ~~***Pears***~~ | Spinach | Colors Fruits Vegetable Red Apple Pepper Orange Oranges Carrot Green Pears Spinach Class or Enum Year Month Day Hours Minutes Seconds* Zone Offset Zone ID toString Output Where Discussed Instant 2013-08-20T15:16:26.355Z Instant Class LocalDate 2013-08-20 Date Classes LocalDateTime 2013-08-20T08:16:26.937 Date and Time Classes ZonedDateTime 2013-08-21T00:16:26.941+09:00[Asia/Tokyo] Time Zone and Offset Classes LocalTime 08:16:26.943 Date and Time Classes MonthDay --08-20 Date Classes Year 2013 Date Classes YearMonth 2013-08 Date Classes Month AUGUST DayOfWeek and Month Enums OffsetDateTime 2013-08-20T08:16:26.954-07:00 Time Zone and Offset Classes OffsetTime 08:16:26.957-07:00 Time Zone and Offset Classes Duration ** ** ** PT20H (20 hours) Period and Duration Period *** *** P10D (10 days) Period and Duration ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:16:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Smart Strong Text with double__underscore__words. __Strong__ still works. __this__works__too__ Text with double__underscore__words. Strong still works. this__works__too ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:17:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Smarty \"double quotes\" 'single quotes' da--sh elipsis... “double quotes” ‘single quotes’ da–sh elipsis… ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:18:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Neseted Fences ``` This will still be parsed as a normal indented code block. ``` ``` This will still be parsed as a fenced code block. ``` - This is a list that contains multiple code blocks. - Here is an indented block ``` This will still be parsed as a normal indented code block. ``` - Here is a fenced code block: ``` This will still be parsed as a fenced code block. ``` \u003e ``` \u003e Blockquotes? \u003e Not a problem! \u003e ``` ``` This will still be parsed as a normal indented code block. ``` This will still be parsed as a fenced code block. This is a list that contains multiple code blocks. Here is an indented block ``` This will still be parsed as a normal indented code block. ``` Here is a fenced code block: This will still be parsed as a fenced code block. Blockquotes? Not a problem! Others ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:19:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Github Emoji This is a test for emoji :smile:. The emojis are images linked to github assets :octocat:. This is a test for emoji :smile:. The emojis are images linked to github assets :octocat:. ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:20:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"People :+1::-1::alien::angel::anger::angry::anguished::astonished::baby::blue_heart::blush::boom::bow::bowtie::boy::bride_with_veil::broken_heart::bust_in_silhouette::busts_in_silhouette::clap::cold_sweat::collision::confounded::confused::construction_worker::cop::couple::couple_with_heart::couplekiss::cry::crying_cat_face::cupid::dancer::dancers::dash::disappointed::disappointed_relieved::dizzy::dizzy_face::droplet::ear::exclamation::expressionless::eyes::facepunch::family::fearful::feelsgood::feet::finnadie::fire::fist::flushed::frowning::fu::girl::goberserk::godmode::green_heart::grey_exclamation::grey_question::grimacing::grin::grinning::guardsman::haircut::hand::hankey::hear_no_evil::heart::heart_eyes::heart_eyes_cat::heartbeat::heartpulse::hurtrealbad::hushed::imp::information_desk_person::innocent::japanese_goblin::japanese_ogre::joy::joy_cat::kiss::kissing::kissing_cat::kissing_closed_eyes::kissing_heart::kissing_smiling_eyes::laughing::lips::love_letter::man::man_with_gua_pi_mao::man_with_turban::mask::massage::metal::muscle::musical_note::nail_care::neckbeard::neutral_face::no_good::no_mouth::nose::notes::ok_hand::ok_woman::older_man::older_woman::open_hands::open_mouth::pensive::persevere::person_frowning::person_with_blond_hair::person_with_pouting_face::point_down::point_left::point_right::point_up::point_up_2::poop::pouting_cat::pray::princess::punch::purple_heart::question::rage::rage1::rage2::rage3::rage4::raised_hand::raised_hands::raising_hand::relaxed::relieved::revolving_hearts::runner::running::satisfied::scream::scream_cat::see_no_evil::shit::skull::sleeping::sleepy::smile::smile_cat::smiley::smiley_cat::smiling_imp::smirk::smirk_cat::sob::sparkles::sparkling_heart::speak_no_evil::speech_balloon::star::star2::stuck_out_tongue::stuck_out_tongue_closed_eyes::stuck_out_tongue_winking_eye::sunglasses::suspect::sweat::sweat_drops::sweat_smile::thought_balloon::thumbsdown::thumbsup::tired_face::tongue::triumph::trollface::two_hearts::two_men_holding_hands::two_women_holding_hands::unamused::v::walking::wave::weary::wink::woman::worried::yellow_heart::yum::zzz: ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:20:1","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Nature :ant::baby_chick::bear::bee::beetle::bird::blossom::blowfish::boar::bouquet::bug::cactus::camel::cat::cat2::cherry_blossom::chestnut::chicken::cloud::cow::cow2::crescent_moon::crocodile::cyclone::deciduous_tree::dog::dog2::dolphin::dragon::dragon_face::dromedary_camel::ear_of_rice::earth_africa::earth_americas::earth_asia::elephant::evergreen_tree::fallen_leaf::first_quarter_moon::first_quarter_moon_with_face::fish::foggy::four_leaf_clover::frog::full_moon::full_moon_with_face::globe_with_meridians::goat::hamster::hatched_chick::hatching_chick::herb::hibiscus::honeybee::horse::koala::last_quarter_moon::last_quarter_moon_with_face::leaves::leopard::maple_leaf::milky_way::monkey::monkey_face::moon::mouse::mouse2::mushroom::new_moon::new_moon_with_face::night_with_stars::ocean::octocat::octopus::ox::palm_tree::panda_face::partly_sunny::paw_prints::penguin::pig::pig2::pig_nose::poodle::rabbit::rabbit2::racehorse::ram::rat::rooster::rose::seedling::sheep::shell::snail::snake::snowflake::snowman::squirrel::sun_with_face::sunflower::sunny::tiger::tiger2::tropical_fish::tulip::turtle::umbrella::volcano::waning_crescent_moon::waning_gibbous_moon::water_buffalo::waxing_crescent_moon::waxing_gibbous_moon::whale::whale2::wolf::zap: ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:20:2","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Objects :8ball::alarm_clock::apple::art::athletic_shoe::baby_bottle::balloon::bamboo::banana::bar_chart::baseball::basketball::bath::bathtub::battery::beer::beers::bell::bento::bicyclist::bikini::birthday::black_joker::black_nib::blue_book::bomb::book::bookmark::bookmark_tabs::books::boot::bowling::bread::briefcase::bulb::cake::calendar::calling::camera::candy::card_index::cd::chart_with_downwards_trend::chart_with_upwards_trend::cherries::chocolate_bar::christmas_tree::clapper::clipboard::closed_book::closed_lock_with_key::closed_umbrella::clubs::cocktail::coffee::computer::confetti_ball::cookie::corn::credit_card::crown::crystal_ball::curry::custard::dango::dart::date::diamonds::dollar::dolls::door::doughnut::dress::dvd::e-mail::egg::eggplant::electric_plug::email::envelope::envelope_with_arrow::euro::eyeglasses::fax::file_folder::fireworks::fish_cake::fishing_pole_and_fish::flags::flashlight::flipper::floppy_disk::flower_playing_cards::football::footprints::fork_and_knife::fried_shrimp::fries::game_die::gem::ghost::gift::gift_heart::golf::grapes::green_apple::green_book::guitar::gun::hamburger::hammer::handbag::headphones::hearts::high_brightness::high_heel::hocho::honey_pot::horse_racing::hourglass::hourglass_flowing_sand::ice_cream::icecream::inbox_tray::incoming_envelope::iphone::jack_o_lantern::jeans::key::kimono::lantern::ledger::lemon::lipstick::lock::lock_with_ink_pen::lollipop::loop::loud_sound::loudspeaker::low_brightness::mag::mag_right::mahjong::mailbox::mailbox_closed::mailbox_with_mail::mailbox_with_no_mail::mans_shoe::meat_on_bone::mega::melon::memo::microphone::microscope::minidisc::money_with_wings::moneybag::mortar_board::mountain_bicyclist::movie_camera::musical_keyboard::musical_score::mute::name_badge::necktie::newspaper::no_bell::notebook::notebook_with_decorative_cover::nut_and_bolt::oden::open_book::open_file_folder::orange_book::outbox_tray::package::page_facing_up::page_with_curl::pager::paperclip::peach::pear::pencil::pencil2::phone::pill::pineapple::pizza::postal_horn::postbox::pouch::poultry_leg::pound::purse::pushpin::radio::ramen::ribbon::rice::rice_ball::rice_cracker::rice_scene::ring::rugby_football::running_shirt_with_sash::sake::sandal::santa::satellite::saxophone::school_satchel::scissors::scroll::seat::shaved_ice::shirt::shoe::shower::ski::smoking::snowboarder::soccer::sound::space_invader::spades::spaghetti::sparkle::sparkler::speaker::stew::straight_ruler::strawberry::surfer::sushi::sweet_potato::swimmer::syringe::tada::tanabata_tree::tangerine::tea::telephone::telephone_receiver::telescope::tennis::toilet::tomato::tophat::triangular_ruler::trophy::tropical_drink::trumpet::tshirt::tv::unlock::vhs::video_camera::video_game::violin::watch::watermelon::wind_chime::wine_glass::womans_clothes::womans_hat::wrench::yen: ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:20:3","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Places :aerial_tramway::airplane::ambulance::anchor::articulated_lorry::atm::bank::barber::beginner::bike::blue_car::boat::bridge_at_night::bullettrain_front::bullettrain_side::bus::busstop::car::carousel_horse::checkered_flag::church::circus_tent::city_sunrise::city_sunset::cn::construction::convenience_store::crossed_flags::de::department_store::es::european_castle::european_post_office::factory::ferris_wheel::fire_engine::fountain::fr::fuelpump::gb::helicopter::hospital::hotel::hotsprings::house::house_with_garden::it::izakaya_lantern::japan::japanese_castle::jp::kr::light_rail::love_hotel::minibus::monorail::mount_fuji::mountain_cableway::mountain_railway::moyai::office::oncoming_automobile::oncoming_bus::oncoming_police_car::oncoming_taxi::performing_arts::police_car::post_office::railway_car::rainbow::red_car::rocket::roller_coaster::rotating_light::round_pushpin::rowboat::ru::sailboat::school::ship::slot_machine::speedboat::stars::station::statue_of_liberty::steam_locomotive::sunrise::sunrise_over_mountains::suspension_railway::taxi::tent::ticket::tokyo_tower::tractor::traffic_light::train::train2::tram::triangular_flag_on_post::trolleybus::truck::uk::us::vertical_traffic_light::warning::wedding: ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:20:4","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Symbols :100::1234::a::ab::abc::abcd::accept::aquarius::aries::arrow_backward::arrow_double_down::arrow_double_up::arrow_down::arrow_down_small::arrow_forward::arrow_heading_down::arrow_heading_up::arrow_left::arrow_lower_left::arrow_lower_right::arrow_right::arrow_right_hook::arrow_up::arrow_up_down::arrow_up_small::arrow_upper_left::arrow_upper_right::arrows_clockwise::arrows_counterclockwise::b::baby_symbol::back::baggage_claim::ballot_box_with_check::bangbang::black_circle::black_large_square::black_medium_small_square::black_medium_square::black_small_square::black_square_button::cancer::capital_abcd::capricorn::chart::children_crossing::cinema::cl::clock1::clock10::clock1030::clock11::clock1130::clock12::clock1230::clock130::clock2::clock230::clock3::clock330::clock4::clock430::clock5::clock530::clock6::clock630::clock7::clock730::clock8::clock830::clock9::clock930::congratulations::cool::copyright::curly_loop::currency_exchange::customs::diamond_shape_with_a_dot_inside::do_not_litter::eight::eight_pointed_black_star::eight_spoked_asterisk::end::fast_forward::five::four::free::gemini::hash::heart_decoration::heavy_check_mark::heavy_division_sign::heavy_dollar_sign::heavy_exclamation_mark::heavy_minus_sign::heavy_multiplication_x::heavy_plus_sign::id::ideograph_advantage::information_source::interrobang::keycap_ten::koko::large_blue_circle::large_blue_diamond::large_orange_diamond::left_luggage::left_right_arrow::leftwards_arrow_with_hook::leo::libra::link::m::mens::metro::mobile_phone_off::negative_squared_cross_mark::new::ng::nine::no_bicycles::no_entry::no_entry_sign::no_mobile_phones::no_pedestrians::no_smoking::non-potable_water::o::o2::ok::on::one::ophiuchus::parking::part_alternation_mark::passport_control::pisces::potable_water::put_litter_in_its_place::radio_button::recycle::red_circle::registered::repeat::repeat_one::restroom::rewind::sa::sagittarius::scorpius::secret::seven::shipit::signal_strength::six::six_pointed_star::small_blue_diamond::small_orange_diamond::small_red_triangle::small_red_triangle_down::soon::sos::symbols::taurus::three::tm::top::trident::twisted_rightwards_arrows::two::u5272::u5408::u55b6::u6307::u6708::u6709::u6e80::u7121::u7533::u7981::u7a7a::underage::up::vibration_mode::virgo::vs::wavy_dash::wc::wheelchair::white_check_mark::white_circle::white_flower::white_large_square::white_medium_small_square::white_medium_square::white_small_square::white_square_button::womens::x::zero: ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:20:5","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Insert ^^insert^^ ^^*insert italic*^^ *^^insert italic 2^^* ^^_insert italic_^^ _^^insert italic 2^^_ ^^**insert bold**^^ **^^insert bold 2^^** ^^__insert bold__^^ __^^insert bold 2^^__ ^^***insert italic bold***^^ ***^^insert italic bold 2^^*** ^^___insert italic bold___^^ ___^^insert italic bold 2^^___ **^^*insert italic bold*^^** *^^**insert italic bold 2**^^* __^^_insert italic bold_^^__ _^^__insert italic bold 2__^^_ **^^_insert italic bold_^^** _^^**insert italic bold 2**^^_ __^^*insert italic bold*^^__ *^^__insert italic bold 2__^^* ^^insert^^ ^^insert italic^^ ^^insert italic 2^^ ^^insert italic^^ ^^insert italic 2^^ ^^insert bold^^ ^^insert bold 2^^ ^^insert bold^^ ^^insert bold 2^^ ^^insert italic bold^^ ^^insert italic bold 2^^ ^^insert italic bold^^ ^^insert italic bold 2^^ ^^insert italic bold^^ ^^insert italic bold 2^^ ^^insert italic bold^^ ^^insert italic bold 2^^ ^^insert italic bold^^ ^^insert italic bold 2^^ ^^insert italic bold^^ ^^insert italic bold 2^^ ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:21:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["Markdown"],"content":"Math $$ evidence\\_{i}=\\sum\\_{j}W\\_{ij}x\\_{j}+b\\_{i} $$ $$ evidence_{i}=\\sum_{j}W_{ij}x_{j}+b_{i} $$ This is a footnote ↩︎ A footnote on “label” ↩︎ The footnote for definition ↩︎ Markdown Cheatsheet ↩︎ ","date":"2017-08-30","objectID":"/posts/markdown%E6%B5%8B%E8%AF%95/:22:0","tags":["Markdown"],"title":"Markdown测试","uri":"/posts/markdown%E6%B5%8B%E8%AF%95/"},{"categories":["代码高亮"],"content":" function helloWorld () { alert(\"Hello, World!\") } public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } } package hello fun main(args: Array\u003cString\u003e) { println(\"Hello World!\") } #include \u003cstdio.h\u003e /* Hello */ int main(void){ printf(\"Hello, World!\"); return 0; } // 'Hello World!' program #include \u003ciostream\u003e int main(){ std::cout \u003c\u003c \"Hello World!\" \u003c\u003c std::endl; return 0; } using System; class HelloWorld{ public static void Main(){ System.Console.WriteLine(\"Hello, World!\"); } } \u003chtml\u003e \u003cbody\u003e Hello, World! \u003c/body\u003e \u003c/html\u003e package main import fmt \"fmt\" func main() { fmt.Printf(\"Hello, World!\\n\"); } object HelloWorld with Application { Console.println(\"Hello, World!\"); } \u003c?php echo 'Hello, World!'; ?\u003e print(\"Hello, World!\") (defn hello-world \"A function print 'Hello world'.\" [] (prn \"Hello world\")) ","date":"2017-08-30","objectID":"/posts/%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%B5%8B%E8%AF%95/:0:0","tags":["代码高亮"],"title":"代码高亮测试","uri":"/posts/%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE%E6%B5%8B%E8%AF%95/"},{"categories":["日文"],"content":" 日本語の敬語体系は、一般に、大きく尊敬語・謙譲語・丁寧語に分類される。文化審議会国語分科会は、2007年2月に「敬語の指針」を答申し、これに丁重語および美化語を含めた5分類を示している。 尊敬語 尊敬語は、動作の主体を高めることで、主体への敬意を表す言い方である。動詞に「お（ご）～になる」を付けた形、また、助動詞「（ら）れる」を付けた形などが用いられる。たとえば、動詞「取る」の尊敬形として、「（先生が）お取りになる」「（先生が）取られる」などが用いられる。 語によっては、特定の尊敬語が対応するものもある。たとえば、「言う」の尊敬語は「おっしゃる」、「食べる」の尊敬語は「召し上がる」、「行く・来る・いる」の尊敬語は「いらっしゃる」である。 謙譲語 謙譲語は、古代から基本的に動作の客体への敬意を表す言い方であり、現代では「動作の主体を低める」と解釈するほうがよい場合がある。動詞に「お～する」「お～いたします」（謙譲語＋丁寧語）をつけた形などが用いられる。たとえば、「取る」の謙譲形として、「お取りする」などが用いられる。 語によっては、特定の謙譲語が対応するものもある。たとえば、「言う」の謙譲語は「申し上げる」、「食べる」の謙譲語は「いただく」、「（相手の所に）行く」の謙譲語は「伺う」「参上する」「まいる」である。 なお、「夜も更けてまいりました」の「まいり」など、謙譲表現のようでありながら、誰かを低めているわけではない表現がある。これは、「夜も更けてきた」という話題を丁重に表現することによって、聞き手への敬意を表すものである。宮地裕は、この表現に使われる語を、特に「丁重語」と称している[104][105]。丁重語にはほかに「いたし（マス）」「申し（マス）」「存じ（マス）」「小生」「小社」「弊社」などがある。文化審議会の「敬語の指針」でも、「明日から海外へまいります」の「まいり」のように、相手とは関りのない自分側の動作を表現する言い方を丁重語としている。 丁寧語 丁寧語は、文末を丁寧にすることで、聞き手への敬意を表すものである。動詞・形容詞の終止形で終わる常体に対して、名詞・形容動詞語幹などに「です」を付けた形（「学生です」「きれいです」）や、動詞に「ます」をつけた形（「行きます」「分かりました」）等の丁寧語を用いた文体を敬体という。 一般に、目上の人には丁寧語を用い、同等・目下の人には丁寧語を用いないといわれる。しかし、実際の言語生活に照らして考えれば、これは事実ではない。母が子を叱るとき、「お母さんはもう知りませんよ」と丁寧語を用いる場合ももある。丁寧語が用いられる多くの場合は、敬意や謝意の表現とされるが、、稀に一歩引いた心理的な距離をとろうとする場合もある。 「お弁当」「ご飯」などの「お」「ご」も、広い意味では丁寧語に含まれるが、宮地裕は特に「美化語」と称して区別する[104][105]。相手への丁寧の意を示すというよりは、話し手が自分の言葉遣いに配慮した表現である。したがって、「お弁当食べようよ。」のように、丁寧体でない文でも美化語を用いることがある。文化審議会の「敬語の指針」でも「美化語」を設けている。 ","date":"2017-08-30","objectID":"/posts/%E6%97%A5%E6%96%87%E6%B5%8B%E8%AF%95/:0:0","tags":["日文"],"title":"日文测试","uri":"/posts/%E6%97%A5%E6%96%87%E6%B5%8B%E8%AF%95/"},{"categories":["中文测试"],"content":" 《长恨歌》是中国唐朝诗人白居易的一首长篇叙事诗。 第一段：贵妃受宠爱 汉皇重色思倾国，御宇多年求不得。杨家有女初长成，养在深闺人未识。 天生丽质难自弃，一朝选在君王侧。回眸一笑百媚生，六宫粉黛无颜色。 春寒赐浴华清池，温泉水滑洗凝脂。侍儿扶起娇无力，始是新承恩泽时。 云鬓花颜金步摇，芙蓉帐暖度春宵。春宵苦短日高起，从此君王不早朝。 承欢侍宴无闲暇，春从春游夜专夜。后宫佳丽三千人，三千宠爱在一身。 金屋妆成娇侍夜，玉楼宴罢醉和春。姊妹弟兄皆列士，可怜光彩生门户。 遂令天下父母心，不重生男重生女。骊宫高处入青云，仙乐风飘处处闻。 缓歌慢舞凝丝竹，尽日君王看不足。渔阳鼙鼓动地来，惊破霓裳羽衣曲。 第二段：马嵬惊变 九重城阙烟尘生，千乘万骑西南行。翠华摇摇行复止，西出都门百余里。 六军不发无奈何，宛转蛾眉马前死。花钿委地无人收，翠翘金雀玉搔头。 君王掩面救不得，回看血泪相和流。黄埃散漫风萧索，云栈萦纡登剑阁。 峨嵋山下少人行，旌旗无光日色薄。蜀江水碧蜀山青，圣主朝朝暮暮情。 行宫见月伤心色，夜雨闻铃肠断声。 第三段：玄宗皇帝思念 天旋地转回龙驭，到此踌躇不能去。马嵬坡下泥土中，不见玉颜空死处。 君臣相顾尽霑衣，东望都门信马归。归来池苑皆依旧，太液芙蓉未央柳。 芙蓉如面柳如眉，对此如何不泪垂。春风桃李花开日，秋雨梧桐叶落时。 西宫南内多秋草，落叶满阶红不扫。梨园弟子白发新，椒房阿监青娥老。 夕殿萤飞思悄然，孤灯挑尽未成眠。迟迟钟鼓初长夜，耿耿星河欲曙天。 鸳鸯瓦冷霜华重，翡翠衾寒谁与共。悠悠生死别经年，魂魄不曾来入梦。 第四段：仙界寻妃 临邛道士鸿都客，能以精诚致魂魄。为感君王辗转思，遂教方士殷勤觅。 排空驭气奔如电，升天入地求之遍。上穷碧落下黄泉，两处茫茫皆不见。 忽闻海上有仙山，山在虚无缥缈间。楼阁玲珑五云起，其中绰约多仙子。 中有一人字太真，雪肤花貌参差是。金阙西厢叩玉扃，转教小玉报双成。 闻道汉家天子使，九华帐里梦魂惊。揽衣推枕起徘徊，珠箔银屏迤逦开。 云髻(鬓?)半偏新睡觉，花冠不整下堂来。风吹仙袂飘飘(飖)举，犹似霓裳羽衣舞。 玉容寂寞泪阑干，梨花一枝春带雨。含情凝睇谢君王，一别音容两渺茫。 昭阳殿里恩爱绝，蓬莱宫中日月长。回头下望人寰处，不见长安见尘雾。 唯将旧物表深情，钿合金钗寄将去。钗留一股合一扇，钗擘黄金合分钿。 但教心似金钿坚，天上人间会相见。临别殷勤重寄词，词中有誓两心知。 七月七日长生殿，夜半无人私语时。在天愿作比翼鸟，在地愿为连理枝。 天长地久有时尽，此恨绵绵无绝期。 ","date":"2017-08-30","objectID":"/posts/%E4%B8%AD%E6%96%87%E6%B5%8B%E8%AF%95/:0:0","tags":["中文测试"],"title":"中文测试","uri":"/posts/%E4%B8%AD%E6%96%87%E6%B5%8B%E8%AF%95/"}]